{
	"id": "791f300d-0421-4c8d-90d2-caa11a79e1a5",
	"name": "Final_Project",
	"allTests": [],
	"timestamp": "2018-12-04T06:20:39.430Z",
	"collection_id": "7c444511-3775-4e19-b9e0-780632197532",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "3907b459-373b-4395-a213-56d352569c66",
	"data": [],
	"delay": 20,
	"count": 1,
	"collection": {
		"id": "7c444511-3775-4e19-b9e0-780632197532",
		"name": "Final_Project",
		"description": "",
		"auth": {
			"type": "bearer",
			"bearer": [
				{
					"key": "token",
					"value": "{{auth0_token}}"
				}
			]
		},
		"events": [
			{
				"listen": "prerequest",
				"script": {
					"id": "73d0902f-3027-49a3-8cde-b0d2a2950f41",
					"type": "text/javascript",
					"exec": [
						""
					]
				}
			},
			{
				"listen": "test",
				"script": {
					"id": "4e1c68d0-76f5-4fb6-a605-473c6ef1a5ca",
					"type": "text/javascript",
					"exec": [
						""
					]
				}
			}
		],
		"variables": [],
		"order": [],
		"folders_order": [
			"87942386-b3f1-4d34-b383-8185b37c5255",
			"683f6c01-6a0a-464d-94e6-f4ceb6e7f5da",
			"d47b282d-bddd-4ed6-b714-e3495137ba62",
			"01df5d40-629b-4ff1-9bd4-92ab80b2cc43",
			"f480a19f-7ddc-4a4f-92ee-6291cc091998",
			"130bf004-6959-4ee0-8b11-62612bbd00b3",
			"1867d774-5849-401d-9fa1-92fa5f5d824a",
			"531c5162-4977-4662-a37c-d55beefe3ad4",
			"6d2f50d8-3e08-40f7-911f-8f24b4dc7e5f",
			"5702afc6-14c4-4cb6-afb2-34da0b6227d6"
		],
		"owner": "3796550",
		"permissions": {},
		"favorite": false,
		"shared": false,
		"type": "collection",
		"depth": 0
	},
	"folder": null,
	"environment": null,
	"globals": [],
	"results": [
		{
			"name": "Client Authorization",
			"id": "39434db5-45b8-4aae-a433-3ccf59cc33cc",
			"url": "https://kraftme-223903.appspot.com/oauth",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status 200 OK",
				"status": "pass",
				"Client Access Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJpc3MiOiJodHRwczovL2tyYWZ0bWUuYXV0aDAuY29tLyIsInN1YiI6Ikh3Nk1GZE9yTkk5S0UxY2JiVkhyQXdpeEdIVm4yOUNIQGNsaWVudHMiLCJhdWQiOiJodHRwczovL2tyYWZ0bWUuYXV0aDAuY29tL2FwaS92Mi8iLCJpYXQiOjE1NDM5MDQ0MzksImV4cCI6MTU0Mzk5MDgzOSwiYXpwIjoiSHc2TUZkT3JOSTlLRTFjYmJWSHJBd2l4R0hWbjI5Q0giLCJzY29wZSI6InJlYWQ6Y2xpZW50X2dyYW50cyBjcmVhdGU6Y2xpZW50X2dyYW50cyBkZWxldGU6Y2xpZW50X2dyYW50cyB1cGRhdGU6Y2xpZW50X2dyYW50cyByZWFkOnVzZXJzIHVwZGF0ZTp1c2VycyBkZWxldGU6dXNlcnMgY3JlYXRlOnVzZXJzIHJlYWQ6dXNlcnNfYXBwX21ldGFkYXRhIHVwZGF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgZGVsZXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBjcmVhdGU6dXNlcnNfYXBwX21ldGFkYXRhIGNyZWF0ZTp1c2VyX3RpY2tldHMgcmVhZDpjbGllbnRzIHVwZGF0ZTpjbGllbnRzIGRlbGV0ZTpjbGllbnRzIGNyZWF0ZTpjbGllbnRzIHJlYWQ6Y2xpZW50X2tleXMgdXBkYXRlOmNsaWVudF9rZXlzIGRlbGV0ZTpjbGllbnRfa2V5cyBjcmVhdGU6Y2xpZW50X2tleXMgcmVhZDpjb25uZWN0aW9ucyB1cGRhdGU6Y29ubmVjdGlvbnMgZGVsZXRlOmNvbm5lY3Rpb25zIGNyZWF0ZTpjb25uZWN0aW9ucyByZWFkOnJlc291cmNlX3NlcnZlcnMgdXBkYXRlOnJlc291cmNlX3NlcnZlcnMgZGVsZXRlOnJlc291cmNlX3NlcnZlcnMgY3JlYXRlOnJlc291cmNlX3NlcnZlcnMgcmVhZDpkZXZpY2VfY3JlZGVudGlhbHMgdXBkYXRlOmRldmljZV9jcmVkZW50aWFscyBkZWxldGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGNyZWF0ZTpkZXZpY2VfY3JlZGVudGlhbHMgcmVhZDpydWxlcyB1cGRhdGU6cnVsZXMgZGVsZXRlOnJ1bGVzIGNyZWF0ZTpydWxlcyByZWFkOnJ1bGVzX2NvbmZpZ3MgdXBkYXRlOnJ1bGVzX2NvbmZpZ3MgZGVsZXRlOnJ1bGVzX2NvbmZpZ3MgcmVhZDplbWFpbF9wcm92aWRlciB1cGRhdGU6ZW1haWxfcHJvdmlkZXIgZGVsZXRlOmVtYWlsX3Byb3ZpZGVyIGNyZWF0ZTplbWFpbF9wcm92aWRlciBibGFja2xpc3Q6dG9rZW5zIHJlYWQ6c3RhdHMgcmVhZDp0ZW5hbnRfc2V0dGluZ3MgdXBkYXRlOnRlbmFudF9zZXR0aW5ncyByZWFkOmxvZ3MgcmVhZDpzaGllbGRzIGNyZWF0ZTpzaGllbGRzIGRlbGV0ZTpzaGllbGRzIHVwZGF0ZTp0cmlnZ2VycyByZWFkOnRyaWdnZXJzIHJlYWQ6Z3JhbnRzIGRlbGV0ZTpncmFudHMgcmVhZDpndWFyZGlhbl9mYWN0b3JzIHVwZGF0ZTpndWFyZGlhbl9mYWN0b3JzIHJlYWQ6Z3VhcmRpYW5fZW5yb2xsbWVudHMgZGVsZXRlOmd1YXJkaWFuX2Vucm9sbG1lbnRzIGNyZWF0ZTpndWFyZGlhbl9lbnJvbGxtZW50X3RpY2tldHMgcmVhZDp1c2VyX2lkcF90b2tlbnMgY3JlYXRlOnBhc3N3b3Jkc19jaGVja2luZ19qb2IgZGVsZXRlOnBhc3N3b3Jkc19jaGVja2luZ19qb2IgcmVhZDpjdXN0b21fZG9tYWlucyBkZWxldGU6Y3VzdG9tX2RvbWFpbnMgY3JlYXRlOmN1c3RvbV9kb21haW5zIHJlYWQ6ZW1haWxfdGVtcGxhdGVzIGNyZWF0ZTplbWFpbF90ZW1wbGF0ZXMgdXBkYXRlOmVtYWlsX3RlbXBsYXRlcyByZWFkOm1mYV9wb2xpY2llcyB1cGRhdGU6bWZhX3BvbGljaWVzIHJlYWQ6cm9sZXMgY3JlYXRlOnJvbGVzIGRlbGV0ZTpyb2xlcyB1cGRhdGU6cm9sZXMiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.GzKWtQZry8pJr1ZYOHG500_w3WKCAcs3FE8Vnl35LuGrO9AVujEG6I-I5yJ9MITvylXbwkv3f25Nhk2OoI_9br-5Lmh6Bkm7PxGJgRjCB0B35BDQNxZcTO8IrG5xnsqmlLcMQbKseC6Nk4pBhbMWbZtmCYFLRKmeTG9M7ccXIwZmjNlvFljV8T3omLHE4Ju2iOO1vDeiIB1F0cC21gq7myW5LGBrBiWkgRaQDdDnBqF_ivMsF80jC2jXcdHJZY51KIuN8FrwbxH1lS-9viV-HgDMr2ue_DJ0g-w5pN81I9eGL-111RXzSPw4wqky2ffIxO1pF-I0yf8CRRemleF1gQ": true
			},
			"testPassFailCounts": {
				"Status 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Client Access Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJpc3MiOiJodHRwczovL2tyYWZ0bWUuYXV0aDAuY29tLyIsInN1YiI6Ikh3Nk1GZE9yTkk5S0UxY2JiVkhyQXdpeEdIVm4yOUNIQGNsaWVudHMiLCJhdWQiOiJodHRwczovL2tyYWZ0bWUuYXV0aDAuY29tL2FwaS92Mi8iLCJpYXQiOjE1NDM5MDQ0MzksImV4cCI6MTU0Mzk5MDgzOSwiYXpwIjoiSHc2TUZkT3JOSTlLRTFjYmJWSHJBd2l4R0hWbjI5Q0giLCJzY29wZSI6InJlYWQ6Y2xpZW50X2dyYW50cyBjcmVhdGU6Y2xpZW50X2dyYW50cyBkZWxldGU6Y2xpZW50X2dyYW50cyB1cGRhdGU6Y2xpZW50X2dyYW50cyByZWFkOnVzZXJzIHVwZGF0ZTp1c2VycyBkZWxldGU6dXNlcnMgY3JlYXRlOnVzZXJzIHJlYWQ6dXNlcnNfYXBwX21ldGFkYXRhIHVwZGF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgZGVsZXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBjcmVhdGU6dXNlcnNfYXBwX21ldGFkYXRhIGNyZWF0ZTp1c2VyX3RpY2tldHMgcmVhZDpjbGllbnRzIHVwZGF0ZTpjbGllbnRzIGRlbGV0ZTpjbGllbnRzIGNyZWF0ZTpjbGllbnRzIHJlYWQ6Y2xpZW50X2tleXMgdXBkYXRlOmNsaWVudF9rZXlzIGRlbGV0ZTpjbGllbnRfa2V5cyBjcmVhdGU6Y2xpZW50X2tleXMgcmVhZDpjb25uZWN0aW9ucyB1cGRhdGU6Y29ubmVjdGlvbnMgZGVsZXRlOmNvbm5lY3Rpb25zIGNyZWF0ZTpjb25uZWN0aW9ucyByZWFkOnJlc291cmNlX3NlcnZlcnMgdXBkYXRlOnJlc291cmNlX3NlcnZlcnMgZGVsZXRlOnJlc291cmNlX3NlcnZlcnMgY3JlYXRlOnJlc291cmNlX3NlcnZlcnMgcmVhZDpkZXZpY2VfY3JlZGVudGlhbHMgdXBkYXRlOmRldmljZV9jcmVkZW50aWFscyBkZWxldGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGNyZWF0ZTpkZXZpY2VfY3JlZGVudGlhbHMgcmVhZDpydWxlcyB1cGRhdGU6cnVsZXMgZGVsZXRlOnJ1bGVzIGNyZWF0ZTpydWxlcyByZWFkOnJ1bGVzX2NvbmZpZ3MgdXBkYXRlOnJ1bGVzX2NvbmZpZ3MgZGVsZXRlOnJ1bGVzX2NvbmZpZ3MgcmVhZDplbWFpbF9wcm92aWRlciB1cGRhdGU6ZW1haWxfcHJvdmlkZXIgZGVsZXRlOmVtYWlsX3Byb3ZpZGVyIGNyZWF0ZTplbWFpbF9wcm92aWRlciBibGFja2xpc3Q6dG9rZW5zIHJlYWQ6c3RhdHMgcmVhZDp0ZW5hbnRfc2V0dGluZ3MgdXBkYXRlOnRlbmFudF9zZXR0aW5ncyByZWFkOmxvZ3MgcmVhZDpzaGllbGRzIGNyZWF0ZTpzaGllbGRzIGRlbGV0ZTpzaGllbGRzIHVwZGF0ZTp0cmlnZ2VycyByZWFkOnRyaWdnZXJzIHJlYWQ6Z3JhbnRzIGRlbGV0ZTpncmFudHMgcmVhZDpndWFyZGlhbl9mYWN0b3JzIHVwZGF0ZTpndWFyZGlhbl9mYWN0b3JzIHJlYWQ6Z3VhcmRpYW5fZW5yb2xsbWVudHMgZGVsZXRlOmd1YXJkaWFuX2Vucm9sbG1lbnRzIGNyZWF0ZTpndWFyZGlhbl9lbnJvbGxtZW50X3RpY2tldHMgcmVhZDp1c2VyX2lkcF90b2tlbnMgY3JlYXRlOnBhc3N3b3Jkc19jaGVja2luZ19qb2IgZGVsZXRlOnBhc3N3b3Jkc19jaGVja2luZ19qb2IgcmVhZDpjdXN0b21fZG9tYWlucyBkZWxldGU6Y3VzdG9tX2RvbWFpbnMgY3JlYXRlOmN1c3RvbV9kb21haW5zIHJlYWQ6ZW1haWxfdGVtcGxhdGVzIGNyZWF0ZTplbWFpbF90ZW1wbGF0ZXMgdXBkYXRlOmVtYWlsX3RlbXBsYXRlcyByZWFkOm1mYV9wb2xpY2llcyB1cGRhdGU6bWZhX3BvbGljaWVzIHJlYWQ6cm9sZXMgY3JlYXRlOnJvbGVzIGRlbGV0ZTpyb2xlcyB1cGRhdGU6cm9sZXMiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.GzKWtQZry8pJr1ZYOHG500_w3WKCAcs3FE8Vnl35LuGrO9AVujEG6I-I5yJ9MITvylXbwkv3f25Nhk2OoI_9br-5Lmh6Bkm7PxGJgRjCB0B35BDQNxZcTO8IrG5xnsqmlLcMQbKseC6Nk4pBhbMWbZtmCYFLRKmeTG9M7ccXIwZmjNlvFljV8T3omLHE4Ju2iOO1vDeiIB1F0cC21gq7myW5LGBrBiWkgRaQDdDnBqF_ivMsF80jC2jXcdHJZY51KIuN8FrwbxH1lS-9viV-HgDMr2ue_DJ0g-w5pN81I9eGL-111RXzSPw4wqky2ffIxO1pF-I0yf8CRRemleF1gQ": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"456"
			],
			"allTests": [
				{
					"Status 200 OK": true,
					"Client Access Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJpc3MiOiJodHRwczovL2tyYWZ0bWUuYXV0aDAuY29tLyIsInN1YiI6Ikh3Nk1GZE9yTkk5S0UxY2JiVkhyQXdpeEdIVm4yOUNIQGNsaWVudHMiLCJhdWQiOiJodHRwczovL2tyYWZ0bWUuYXV0aDAuY29tL2FwaS92Mi8iLCJpYXQiOjE1NDM5MDQ0MzksImV4cCI6MTU0Mzk5MDgzOSwiYXpwIjoiSHc2TUZkT3JOSTlLRTFjYmJWSHJBd2l4R0hWbjI5Q0giLCJzY29wZSI6InJlYWQ6Y2xpZW50X2dyYW50cyBjcmVhdGU6Y2xpZW50X2dyYW50cyBkZWxldGU6Y2xpZW50X2dyYW50cyB1cGRhdGU6Y2xpZW50X2dyYW50cyByZWFkOnVzZXJzIHVwZGF0ZTp1c2VycyBkZWxldGU6dXNlcnMgY3JlYXRlOnVzZXJzIHJlYWQ6dXNlcnNfYXBwX21ldGFkYXRhIHVwZGF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgZGVsZXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBjcmVhdGU6dXNlcnNfYXBwX21ldGFkYXRhIGNyZWF0ZTp1c2VyX3RpY2tldHMgcmVhZDpjbGllbnRzIHVwZGF0ZTpjbGllbnRzIGRlbGV0ZTpjbGllbnRzIGNyZWF0ZTpjbGllbnRzIHJlYWQ6Y2xpZW50X2tleXMgdXBkYXRlOmNsaWVudF9rZXlzIGRlbGV0ZTpjbGllbnRfa2V5cyBjcmVhdGU6Y2xpZW50X2tleXMgcmVhZDpjb25uZWN0aW9ucyB1cGRhdGU6Y29ubmVjdGlvbnMgZGVsZXRlOmNvbm5lY3Rpb25zIGNyZWF0ZTpjb25uZWN0aW9ucyByZWFkOnJlc291cmNlX3NlcnZlcnMgdXBkYXRlOnJlc291cmNlX3NlcnZlcnMgZGVsZXRlOnJlc291cmNlX3NlcnZlcnMgY3JlYXRlOnJlc291cmNlX3NlcnZlcnMgcmVhZDpkZXZpY2VfY3JlZGVudGlhbHMgdXBkYXRlOmRldmljZV9jcmVkZW50aWFscyBkZWxldGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGNyZWF0ZTpkZXZpY2VfY3JlZGVudGlhbHMgcmVhZDpydWxlcyB1cGRhdGU6cnVsZXMgZGVsZXRlOnJ1bGVzIGNyZWF0ZTpydWxlcyByZWFkOnJ1bGVzX2NvbmZpZ3MgdXBkYXRlOnJ1bGVzX2NvbmZpZ3MgZGVsZXRlOnJ1bGVzX2NvbmZpZ3MgcmVhZDplbWFpbF9wcm92aWRlciB1cGRhdGU6ZW1haWxfcHJvdmlkZXIgZGVsZXRlOmVtYWlsX3Byb3ZpZGVyIGNyZWF0ZTplbWFpbF9wcm92aWRlciBibGFja2xpc3Q6dG9rZW5zIHJlYWQ6c3RhdHMgcmVhZDp0ZW5hbnRfc2V0dGluZ3MgdXBkYXRlOnRlbmFudF9zZXR0aW5ncyByZWFkOmxvZ3MgcmVhZDpzaGllbGRzIGNyZWF0ZTpzaGllbGRzIGRlbGV0ZTpzaGllbGRzIHVwZGF0ZTp0cmlnZ2VycyByZWFkOnRyaWdnZXJzIHJlYWQ6Z3JhbnRzIGRlbGV0ZTpncmFudHMgcmVhZDpndWFyZGlhbl9mYWN0b3JzIHVwZGF0ZTpndWFyZGlhbl9mYWN0b3JzIHJlYWQ6Z3VhcmRpYW5fZW5yb2xsbWVudHMgZGVsZXRlOmd1YXJkaWFuX2Vucm9sbG1lbnRzIGNyZWF0ZTpndWFyZGlhbl9lbnJvbGxtZW50X3RpY2tldHMgcmVhZDp1c2VyX2lkcF90b2tlbnMgY3JlYXRlOnBhc3N3b3Jkc19jaGVja2luZ19qb2IgZGVsZXRlOnBhc3N3b3Jkc19jaGVja2luZ19qb2IgcmVhZDpjdXN0b21fZG9tYWlucyBkZWxldGU6Y3VzdG9tX2RvbWFpbnMgY3JlYXRlOmN1c3RvbV9kb21haW5zIHJlYWQ6ZW1haWxfdGVtcGxhdGVzIGNyZWF0ZTplbWFpbF90ZW1wbGF0ZXMgdXBkYXRlOmVtYWlsX3RlbXBsYXRlcyByZWFkOm1mYV9wb2xpY2llcyB1cGRhdGU6bWZhX3BvbGljaWVzIHJlYWQ6cm9sZXMgY3JlYXRlOnJvbGVzIGRlbGV0ZTpyb2xlcyB1cGRhdGU6cm9sZXMiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.GzKWtQZry8pJr1ZYOHG500_w3WKCAcs3FE8Vnl35LuGrO9AVujEG6I-I5yJ9MITvylXbwkv3f25Nhk2OoI_9br-5Lmh6Bkm7PxGJgRjCB0B35BDQNxZcTO8IrG5xnsqmlLcMQbKseC6Nk4pBhbMWbZtmCYFLRKmeTG9M7ccXIwZmjNlvFljV8T3omLHE4Ju2iOO1vDeiIB1F0cC21gq7myW5LGBrBiWkgRaQDdDnBqF_ivMsF80jC2jXcdHJZY51KIuN8FrwbxH1lS-9viV-HgDMr2ue_DJ0g-w5pN81I9eGL-111RXzSPw4wqky2ffIxO1pF-I0yf8CRRemleF1gQ": true
				}
			],
			"time": "456",
			"totalRequestTime": "456",
			"iterationResults": {}
		},
		{
			"name": "Get Users ERROR 1",
			"id": "25f03958-b65c-4a1b-aa23-7f8d213e02a5",
			"url": "https://kraftme-223903.appspot.com/users",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: missing credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"55"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: missing credentials": true
				}
			],
			"time": "55",
			"totalRequestTime": "55",
			"iterationResults": {}
		},
		{
			"name": "Get Users ERROR 2",
			"id": "64529413-8ad6-456c-b219-f1c55f17f019",
			"url": "https://kraftme-223903.appspot.com/users",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: user cannot access all user accounts",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user cannot access all user accounts": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"51"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: user cannot access all user accounts": true
				}
			],
			"time": "51",
			"totalRequestTime": "51",
			"iterationResults": {}
		},
		{
			"name": "Get Users ERROR 3",
			"id": "7d4576b0-c1d7-4448-a0b4-88c23e7403ae",
			"url": "https://kraftme-223903.appspot.com/users",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"56"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "56",
			"totalRequestTime": "56",
			"iterationResults": {}
		},
		{
			"name": "Get Users",
			"id": "2a31fe0e-5929-4796-8538-b8ff238b67bb",
			"url": "https://kraftme-223903.appspot.com/users",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status: 200 OK",
				"status": "pass",
				"Found 37 user(s)": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Found 37 user(s)": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"517"
			],
			"allTests": [
				{
					"Status: 200 OK": true,
					"Found 37 user(s)": true
				}
			],
			"time": "517",
			"totalRequestTime": "517",
			"iterationResults": {}
		},
		{
			"name": "Create User ERROR 1",
			"id": "046324ed-88d5-496c-b519-4ca0cea2fe00",
			"url": "https://kraftme-223903.appspot.com/users",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: missing client credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing client credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"85"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: missing client credentials": true
				}
			],
			"time": "85",
			"totalRequestTime": "85",
			"iterationResults": {}
		},
		{
			"name": "Create User ERROR 2",
			"id": "ded83959-96a2-45ae-a2cd-5f1b426d5f98",
			"url": "https://kraftme-223903.appspot.com/users",
			"totalTime": 0,
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"tests": {
				"name": "Status 409 Conflict: unsuccessful POST request, user already exists",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 409 Conflict: unsuccessful POST request, user already exists": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"416"
			],
			"allTests": [
				{
					"Status 409 Conflict: unsuccessful POST request, user already exists": true
				}
			],
			"time": "416",
			"totalRequestTime": "416",
			"iterationResults": {}
		},
		{
			"name": "Create User ERROR 3",
			"id": "8e54f12f-81e3-4357-b492-217cf570cf65",
			"url": "https://kraftme-223903.appspot.com/users",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"48"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "48",
			"totalRequestTime": "48",
			"iterationResults": {}
		},
		{
			"name": "Create User 1",
			"id": "1ee114b8-fc35-4600-aa7d-08bfcdab99f2",
			"url": "https://kraftme-223903.appspot.com/users",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "Status 201 Created: Successful POST request",
				"status": "pass",
				"New, and now current, user is 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": true
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"New, and now current, user is 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"602"
			],
			"allTests": [
				{
					"Status 201 Created: Successful POST request": true,
					"New, and now current, user is 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": true
				}
			],
			"time": "602",
			"totalRequestTime": "602",
			"iterationResults": {}
		},
		{
			"name": "Create User 2",
			"id": "7353faf7-1bae-43f8-bb7f-44cd762e4810",
			"url": "https://kraftme-223903.appspot.com/users",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "Status 201 Created: Successful POST request",
				"status": "pass",
				"Other user is 796cee8f-e275-4edd-878f-e209df15d75a@osu-zoo.com": true
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"Other user is 796cee8f-e275-4edd-878f-e209df15d75a@osu-zoo.com": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"582"
			],
			"allTests": [
				{
					"Status 201 Created: Successful POST request": true,
					"Other user is 796cee8f-e275-4edd-878f-e209df15d75a@osu-zoo.com": true
				}
			],
			"time": "582",
			"totalRequestTime": "582",
			"iterationResults": {}
		},
		{
			"name": "Confirm User Count Increment",
			"id": "3b6febdd-8c7c-4b3c-960c-4361cdaa590a",
			"url": "https://kraftme-223903.appspot.com/users",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status: 200 OK",
				"status": "pass",
				"Found 39 user(s)": true,
				"Contains new user's email 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": true,
				"Contains other user's email 796cee8f-e275-4edd-878f-e209df15d75a@osu-zoo.com": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Found 39 user(s)": {
					"pass": 1,
					"fail": 0
				},
				"Contains new user's email 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": {
					"pass": 1,
					"fail": 0
				},
				"Contains other user's email 796cee8f-e275-4edd-878f-e209df15d75a@osu-zoo.com": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"527"
			],
			"allTests": [
				{
					"Status: 200 OK": true,
					"Found 39 user(s)": true,
					"Contains new user's email 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": true,
					"Contains other user's email 796cee8f-e275-4edd-878f-e209df15d75a@osu-zoo.com": true
				}
			],
			"time": "527",
			"totalRequestTime": "527",
			"iterationResults": {}
		},
		{
			"name": "User Authorization 1",
			"id": "91709a01-d8f3-4fff-bcce-dc999b2112eb",
			"url": "https://kraftme-223903.appspot.com/login",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status 201 Created: Successful POST request",
				"status": "pass",
				"User ID Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJuaWNrbmFtZSI6IjU0NzdkZDBjLTM4YTYtNDM4OC1hMjk0LWRkYTY3YjA0ODA2MiIsIm5hbWUiOiI1NDc3ZGQwYy0zOGE2LTQzODgtYTI5NC1kZGE2N2IwNDgwNjJAb3N1LXpvby5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvODA3MTE0NjVhMmFhNTY4MDU2NGNmYjJlNTY2ZTY3Yjg_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkY1NC5wbmciLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0wNFQwNjoyMDo0NC4xMjBaIiwiZW1haWwiOiI1NDc3ZGQwYy0zOGE2LTQzODgtYTI5NC1kZGE2N2IwNDgwNjJAb3N1LXpvby5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9rcmFmdG1lLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1YzA2MWNiYTc1ODJjZTQ2MDdlZTdkN2IiLCJhdWQiOiJIdzZNRmRPck5JOUtFMWNiYlZIckF3aXhHSFZuMjlDSCIsImlhdCI6MTU0MzkwNDQ0NCwiZXhwIjoxNTQzOTQwNDQ0fQ.F-A7ksz7B2RmE5HPngz_sTx2VSiAhlz_u3NDBLFAxp904-E6TRg-qjNdJuYMW9x2vjlmOYts38lFNuWbHgxPLIbTBmAM1eqngzKQzXP7u8VG2DEALpnOXBC8quylLrwFF4kkUYHkSzWa50mXFfHg7BdRKFNEmAXvsxLb2aFSRRvnzcW4a2NhIpos7OYCs1exs92837bfcW5x9_CUDbggqi5Fpk3H10FXsDLSaf5t__kK9ObhbQU06U0ZGu1P8QPBh2kIjoP8ScTNOwGwUnWDEldqExb7jV0kxSPsIdbEnUX0OEZsHpbOQgMvwnd45CSft4__PUjqV27WmxcM6C7KzQ": true
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"User ID Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJuaWNrbmFtZSI6IjU0NzdkZDBjLTM4YTYtNDM4OC1hMjk0LWRkYTY3YjA0ODA2MiIsIm5hbWUiOiI1NDc3ZGQwYy0zOGE2LTQzODgtYTI5NC1kZGE2N2IwNDgwNjJAb3N1LXpvby5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvODA3MTE0NjVhMmFhNTY4MDU2NGNmYjJlNTY2ZTY3Yjg_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkY1NC5wbmciLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0wNFQwNjoyMDo0NC4xMjBaIiwiZW1haWwiOiI1NDc3ZGQwYy0zOGE2LTQzODgtYTI5NC1kZGE2N2IwNDgwNjJAb3N1LXpvby5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9rcmFmdG1lLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1YzA2MWNiYTc1ODJjZTQ2MDdlZTdkN2IiLCJhdWQiOiJIdzZNRmRPck5JOUtFMWNiYlZIckF3aXhHSFZuMjlDSCIsImlhdCI6MTU0MzkwNDQ0NCwiZXhwIjoxNTQzOTQwNDQ0fQ.F-A7ksz7B2RmE5HPngz_sTx2VSiAhlz_u3NDBLFAxp904-E6TRg-qjNdJuYMW9x2vjlmOYts38lFNuWbHgxPLIbTBmAM1eqngzKQzXP7u8VG2DEALpnOXBC8quylLrwFF4kkUYHkSzWa50mXFfHg7BdRKFNEmAXvsxLb2aFSRRvnzcW4a2NhIpos7OYCs1exs92837bfcW5x9_CUDbggqi5Fpk3H10FXsDLSaf5t__kK9ObhbQU06U0ZGu1P8QPBh2kIjoP8ScTNOwGwUnWDEldqExb7jV0kxSPsIdbEnUX0OEZsHpbOQgMvwnd45CSft4__PUjqV27WmxcM6C7KzQ": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"544"
			],
			"allTests": [
				{
					"Status 201 Created: Successful POST request": true,
					"User ID Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJuaWNrbmFtZSI6IjU0NzdkZDBjLTM4YTYtNDM4OC1hMjk0LWRkYTY3YjA0ODA2MiIsIm5hbWUiOiI1NDc3ZGQwYy0zOGE2LTQzODgtYTI5NC1kZGE2N2IwNDgwNjJAb3N1LXpvby5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvODA3MTE0NjVhMmFhNTY4MDU2NGNmYjJlNTY2ZTY3Yjg_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkY1NC5wbmciLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0wNFQwNjoyMDo0NC4xMjBaIiwiZW1haWwiOiI1NDc3ZGQwYy0zOGE2LTQzODgtYTI5NC1kZGE2N2IwNDgwNjJAb3N1LXpvby5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9rcmFmdG1lLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1YzA2MWNiYTc1ODJjZTQ2MDdlZTdkN2IiLCJhdWQiOiJIdzZNRmRPck5JOUtFMWNiYlZIckF3aXhHSFZuMjlDSCIsImlhdCI6MTU0MzkwNDQ0NCwiZXhwIjoxNTQzOTQwNDQ0fQ.F-A7ksz7B2RmE5HPngz_sTx2VSiAhlz_u3NDBLFAxp904-E6TRg-qjNdJuYMW9x2vjlmOYts38lFNuWbHgxPLIbTBmAM1eqngzKQzXP7u8VG2DEALpnOXBC8quylLrwFF4kkUYHkSzWa50mXFfHg7BdRKFNEmAXvsxLb2aFSRRvnzcW4a2NhIpos7OYCs1exs92837bfcW5x9_CUDbggqi5Fpk3H10FXsDLSaf5t__kK9ObhbQU06U0ZGu1P8QPBh2kIjoP8ScTNOwGwUnWDEldqExb7jV0kxSPsIdbEnUX0OEZsHpbOQgMvwnd45CSft4__PUjqV27WmxcM6C7KzQ": true
				}
			],
			"time": "544",
			"totalRequestTime": "544",
			"iterationResults": {}
		},
		{
			"name": "User Authorization Other",
			"id": "73fa3665-22b3-4e63-acff-6eb8df435a31",
			"url": "https://kraftme-223903.appspot.com/login",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status 201 Created: Successful POST request",
				"status": "pass",
				"User ID Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJuaWNrbmFtZSI6Ijc5NmNlZThmLWUyNzUtNGVkZC04NzhmLWUyMDlkZjE1ZDc1YSIsIm5hbWUiOiI3OTZjZWU4Zi1lMjc1LTRlZGQtODc4Zi1lMjA5ZGYxNWQ3NWFAb3N1LXpvby5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvMjU3YjhiMDcxNGYwMTYzYzI1Yzg0NjA2ZjU3Y2JiZGE_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkY3OS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0wNFQwNjoyMDo0NC43NjdaIiwiZW1haWwiOiI3OTZjZWU4Zi1lMjc1LTRlZGQtODc4Zi1lMjA5ZGYxNWQ3NWFAb3N1LXpvby5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9rcmFmdG1lLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1YzA2MWNiYWNkMDZjODJlMzliZTY1ODkiLCJhdWQiOiJIdzZNRmRPck5JOUtFMWNiYlZIckF3aXhHSFZuMjlDSCIsImlhdCI6MTU0MzkwNDQ0NCwiZXhwIjoxNTQzOTQwNDQ0fQ.O_eTi5npxNdaRgoOLZtKe6S2ExWLMGM-lDZUwca24xeaeLS2UHxJ8NnfUeyDRraMorU8pUFubLbD6ZOODJhOAZMsWpjYUL_aCuCQWMVSao-ocQaO2LckbqRwvtgWXuf1rt0tgHlV-NWcjw_Kkxt2fmrHmUvYssGYgUHZeo1SHpgyq51zwykcaq_LQy-T0Ii6XsGpUJGm3UNPw_1Q7veK6Dp10mIb7EcaAw-2njcCHinwY8srCmjBeYmnX8ycgnAm-_ARlShuodgnZtSe513iOQMyrHXWZS3qszhOvuiDfvGRYqIIvfooBsraRG2RStCA71S41rMIDnVRvwn1HZ_9tA": true
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"User ID Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJuaWNrbmFtZSI6Ijc5NmNlZThmLWUyNzUtNGVkZC04NzhmLWUyMDlkZjE1ZDc1YSIsIm5hbWUiOiI3OTZjZWU4Zi1lMjc1LTRlZGQtODc4Zi1lMjA5ZGYxNWQ3NWFAb3N1LXpvby5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvMjU3YjhiMDcxNGYwMTYzYzI1Yzg0NjA2ZjU3Y2JiZGE_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkY3OS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0wNFQwNjoyMDo0NC43NjdaIiwiZW1haWwiOiI3OTZjZWU4Zi1lMjc1LTRlZGQtODc4Zi1lMjA5ZGYxNWQ3NWFAb3N1LXpvby5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9rcmFmdG1lLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1YzA2MWNiYWNkMDZjODJlMzliZTY1ODkiLCJhdWQiOiJIdzZNRmRPck5JOUtFMWNiYlZIckF3aXhHSFZuMjlDSCIsImlhdCI6MTU0MzkwNDQ0NCwiZXhwIjoxNTQzOTQwNDQ0fQ.O_eTi5npxNdaRgoOLZtKe6S2ExWLMGM-lDZUwca24xeaeLS2UHxJ8NnfUeyDRraMorU8pUFubLbD6ZOODJhOAZMsWpjYUL_aCuCQWMVSao-ocQaO2LckbqRwvtgWXuf1rt0tgHlV-NWcjw_Kkxt2fmrHmUvYssGYgUHZeo1SHpgyq51zwykcaq_LQy-T0Ii6XsGpUJGm3UNPw_1Q7veK6Dp10mIb7EcaAw-2njcCHinwY8srCmjBeYmnX8ycgnAm-_ARlShuodgnZtSe513iOQMyrHXWZS3qszhOvuiDfvGRYqIIvfooBsraRG2RStCA71S41rMIDnVRvwn1HZ_9tA": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"613"
			],
			"allTests": [
				{
					"Status 201 Created: Successful POST request": true,
					"User ID Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJuaWNrbmFtZSI6Ijc5NmNlZThmLWUyNzUtNGVkZC04NzhmLWUyMDlkZjE1ZDc1YSIsIm5hbWUiOiI3OTZjZWU4Zi1lMjc1LTRlZGQtODc4Zi1lMjA5ZGYxNWQ3NWFAb3N1LXpvby5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvMjU3YjhiMDcxNGYwMTYzYzI1Yzg0NjA2ZjU3Y2JiZGE_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkY3OS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0wNFQwNjoyMDo0NC43NjdaIiwiZW1haWwiOiI3OTZjZWU4Zi1lMjc1LTRlZGQtODc4Zi1lMjA5ZGYxNWQ3NWFAb3N1LXpvby5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9rcmFmdG1lLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1YzA2MWNiYWNkMDZjODJlMzliZTY1ODkiLCJhdWQiOiJIdzZNRmRPck5JOUtFMWNiYlZIckF3aXhHSFZuMjlDSCIsImlhdCI6MTU0MzkwNDQ0NCwiZXhwIjoxNTQzOTQwNDQ0fQ.O_eTi5npxNdaRgoOLZtKe6S2ExWLMGM-lDZUwca24xeaeLS2UHxJ8NnfUeyDRraMorU8pUFubLbD6ZOODJhOAZMsWpjYUL_aCuCQWMVSao-ocQaO2LckbqRwvtgWXuf1rt0tgHlV-NWcjw_Kkxt2fmrHmUvYssGYgUHZeo1SHpgyq51zwykcaq_LQy-T0Ii6XsGpUJGm3UNPw_1Q7veK6Dp10mIb7EcaAw-2njcCHinwY8srCmjBeYmnX8ycgnAm-_ARlShuodgnZtSe513iOQMyrHXWZS3qszhOvuiDfvGRYqIIvfooBsraRG2RStCA71S41rMIDnVRvwn1HZ_9tA": true
				}
			],
			"time": "613",
			"totalRequestTime": "613",
			"iterationResults": {}
		},
		{
			"name": "Get User ERROR 1",
			"id": "cd5ed16c-5a05-4eb3-a828-b56874d8d21e",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: missing credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"44"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: missing credentials": true
				}
			],
			"time": "44",
			"totalRequestTime": "44",
			"iterationResults": {}
		},
		{
			"name": "Get User ERROR 2",
			"id": "15a22f10-9529-4bae-b5a6-c0377dac829a",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: user cannot access another user's account",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user cannot access another user's account": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"395"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: user cannot access another user's account": true
				}
			],
			"time": "395",
			"totalRequestTime": "395",
			"iterationResults": {}
		},
		{
			"name": "Get User ERROR 3",
			"id": "c85c25ec-8dd7-450b-ab19-da7f4dcbaf7d",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"42"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "42",
			"totalRequestTime": "42",
			"iterationResults": {}
		},
		{
			"name": "Get User 1",
			"id": "09b0063d-5880-49f4-a355-e67417ebf3da",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status 200 OK",
				"status": "pass",
				"Correct user 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": true
			},
			"testPassFailCounts": {
				"Status 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Correct user 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"420"
			],
			"allTests": [
				{
					"Status 200 OK": true,
					"Correct user 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": true
				}
			],
			"time": "420",
			"totalRequestTime": "420",
			"iterationResults": {}
		},
		{
			"name": "Get User 2",
			"id": "3467cb02-21ce-41af-86f8-6545abff984a",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status 200 OK",
				"status": "pass",
				"Correct user 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": true
			},
			"testPassFailCounts": {
				"Status 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Correct user 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"410"
			],
			"allTests": [
				{
					"Status 200 OK": true,
					"Correct user 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": true
				}
			],
			"time": "410",
			"totalRequestTime": "410",
			"iterationResults": {}
		},
		{
			"name": "Get All Animals ERROR 1",
			"id": "92bfbc40-ee1b-4c8f-81f5-d3c8d9f58544",
			"url": "https://kraftme-223903.appspot.com/animals",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: missing user credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing user credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"47"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: missing user credentials": true
				}
			],
			"time": "47",
			"totalRequestTime": "47",
			"iterationResults": {}
		},
		{
			"name": "Get All Animals ERROR 2",
			"id": "575fb6a1-4e76-419c-9040-4b8ac37d57f6",
			"url": "https://kraftme-223903.appspot.com/animals",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"47"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: invalid credentials": true
				}
			],
			"time": "47",
			"totalRequestTime": "47",
			"iterationResults": {}
		},
		{
			"name": "Get All Animals ERROR 3",
			"id": "55672572-20e7-43fe-884d-ae7611da44ef",
			"url": "https://kraftme-223903.appspot.com/animals",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"48"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "48",
			"totalRequestTime": "48",
			"iterationResults": {}
		},
		{
			"name": "Get All Animals 1",
			"id": "2ea30def-53f9-43ff-9f72-b059107b5ae2",
			"url": "https://kraftme-223903.appspot.com/animals",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {},
			"times": [
				"270"
			],
			"allTests": [
				{}
			],
			"time": "270",
			"totalRequestTime": "270",
			"iterationResults": {}
		},
		{
			"name": "Get All Animals 2",
			"id": "53b74dde-2a9f-4e41-8d07-51b77a361938",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status: 200 OK": true,
				"Found 18 animal(s)": true,
				"Found 3 pagination link(s)": true,
				"Correct number of pagination links": true,
				"Each animal item has a self link": true,
				"Current animal ID is 5185395654393856": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 4,
					"fail": 0
				},
				"Found 18 animal(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 3 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each animal item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Current animal ID is 5185395654393856": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"250",
				"256",
				"181",
				"199"
			],
			"allTests": [
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true,
					"Found 18 animal(s)": true,
					"Found 3 pagination link(s)": true,
					"Correct number of pagination links": true,
					"Each animal item has a self link": true,
					"Current animal ID is 5185395654393856": true
				}
			],
			"time": "199",
			"totalRequestTime": 886,
			"iterationResults": {}
		},
		{
			"name": "Create Animal ERROR 1",
			"id": "40397996-e51a-4e5e-8607-a0e72b4f810a",
			"url": "https://kraftme-223903.appspot.com/animals",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: unsuccessful POST, missing user credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: unsuccessful POST, missing user credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"42"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: unsuccessful POST, missing user credentials": true
				}
			],
			"time": "42",
			"totalRequestTime": "42",
			"iterationResults": {}
		},
		{
			"name": "Create Animal ERROR 2",
			"id": "36bb4e21-f133-4917-810a-c5497e0aa13e",
			"url": "https://kraftme-223903.appspot.com/animals",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: unsuccessful POST, invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: unsuccessful POST, invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"53"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: unsuccessful POST, invalid credentials": true
				}
			],
			"time": "53",
			"totalRequestTime": "53",
			"iterationResults": {}
		},
		{
			"name": "Create Animal ERROR 3",
			"id": "0877df70-df98-4c7c-bedd-9345b4f6e9a4",
			"url": "https://kraftme-223903.appspot.com/animals",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"47"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "47",
			"totalRequestTime": "47",
			"iterationResults": {}
		},
		{
			"name": "Create Animal ERROR 4",
			"id": "e14e642d-27ae-4488-a6cd-e63ae5fdfcd2",
			"url": "https://kraftme-223903.appspot.com/animals",
			"totalTime": 0,
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"tests": {
				"name": "Status 409 Conflict: Unsuccessful POST request due to name conflict",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 409 Conflict: Unsuccessful POST request due to name conflict": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"83"
			],
			"allTests": [
				{
					"Status 409 Conflict: Unsuccessful POST request due to name conflict": true
				}
			],
			"time": "83",
			"totalRequestTime": "83",
			"iterationResults": {}
		},
		{
			"name": "Create Animal ERROR 5",
			"id": "0f7211ad-7b30-402f-8317-7aebc9bbbab7",
			"url": "https://kraftme-223903.appspot.com/animals",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Status 403 Forbidden: Unsuccessful POST request due to missing data",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful POST request due to missing data": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"52"
			],
			"allTests": [
				{
					"Status 403 Forbidden: Unsuccessful POST request due to missing data": true
				}
			],
			"time": "52",
			"totalRequestTime": "52",
			"iterationResults": {}
		},
		{
			"name": "Create Animal",
			"id": "fdcaefca-6ddc-42b2-8907-00e6c01b956a",
			"url": "https://kraftme-223903.appspot.com/animals",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "Status 201 Created: Successful POST request",
				"status": "pass",
				"New, and now current, animal ID is 6223930792607744": true
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"New, and now current, animal ID is 6223930792607744": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"239"
			],
			"allTests": [
				{
					"Status 201 Created: Successful POST request": true,
					"New, and now current, animal ID is 6223930792607744": true
				}
			],
			"time": "239",
			"totalRequestTime": "239",
			"iterationResults": {}
		},
		{
			"name": "Confirm Animal Count Increment",
			"id": "dd687de6-125e-481c-b137-2f5ea1972d45",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status: 200 OK": true,
				"Found 19 animals(s)": true,
				"Correct number of pagination links": true,
				"Each animal item has a self link": true,
				"Contains most recently created animal ID": true,
				"Contains previously existing animal ID(s)": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 4,
					"fail": 0
				},
				"Found 19 animals(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each animal item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Contains most recently created animal ID": {
					"pass": 1,
					"fail": 0
				},
				"Contains previously existing animal ID(s)": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"263",
				"507",
				"166",
				"280"
			],
			"allTests": [
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true,
					"Found 19 animals(s)": true,
					"Correct number of pagination links": true,
					"Each animal item has a self link": true,
					"Contains most recently created animal ID": true,
					"Contains previously existing animal ID(s)": true
				}
			],
			"time": "280",
			"totalRequestTime": 1216,
			"iterationResults": {}
		},
		{
			"name": "Get an Animal ERROR 1",
			"id": "97d5359b-c09d-43ae-9c01-203353e6cb7a",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: missing user credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing user credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"47"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: missing user credentials": true
				}
			],
			"time": "47",
			"totalRequestTime": "47",
			"iterationResults": {}
		},
		{
			"name": "Get an Animal ERROR 2",
			"id": "cde78531-0a90-407c-898d-0f15374c8385",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"51"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: invalid credentials": true
				}
			],
			"time": "51",
			"totalRequestTime": "51",
			"iterationResults": {}
		},
		{
			"name": "Get an Animal ERROR 3",
			"id": "c5f3a7ff-9641-43bf-9bb0-88044c5af5c7",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"49"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "49",
			"totalRequestTime": "49",
			"iterationResults": {}
		},
		{
			"name": "Get an Animal",
			"id": "a69f5cd1-f2af-4bd6-87ac-b0d068d1b754",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status 200 OK",
				"status": "pass",
				"Correct animal ID: 6223930792607744": true
			},
			"testPassFailCounts": {
				"Status 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Correct animal ID: 6223930792607744": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"74"
			],
			"allTests": [
				{
					"Status 200 OK": true,
					"Correct animal ID: 6223930792607744": true
				}
			],
			"time": "74",
			"totalRequestTime": "74",
			"iterationResults": {}
		},
		{
			"name": "Update Animal ERROR 1",
			"id": "8315e56a-ce02-413f-8f14-c3dae9c4e850",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: Unsuccessful PUT, missing user credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: Unsuccessful PUT, missing user credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"42"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: Unsuccessful PUT, missing user credentials": true
				}
			],
			"time": "42",
			"totalRequestTime": "42",
			"iterationResults": {}
		},
		{
			"name": "Update Animal ERROR 2",
			"id": "a91f694d-4897-4dd8-ae9a-5ad60d2554ae",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: Unsuccessful PUT, invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: Unsuccessful PUT, invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"47"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: Unsuccessful PUT, invalid credentials": true
				}
			],
			"time": "47",
			"totalRequestTime": "47",
			"iterationResults": {}
		},
		{
			"name": "Update Animal ERROR 3",
			"id": "307c66cc-361e-4eb8-992d-e3b8cf5f6260",
			"url": "https://kraftme-223903.appspot.com/animals/5630121163620352",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: Unsuccessful PUT, this animal is being kept in another user's enclosure",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: Unsuccessful PUT, this animal is being kept in another user's enclosure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"254"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: Unsuccessful PUT, this animal is being kept in another user's enclosure": true
				}
			],
			"time": "254",
			"totalRequestTime": "254",
			"iterationResults": {}
		},
		{
			"name": "Update Animal ERROR 4",
			"id": "8c09d54a-7def-498c-bc72-0a0fdec0ff0b",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: Unsuccessful PUT, server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: Unsuccessful PUT, server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"44"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: Unsuccessful PUT, server only uses application/json": true
				}
			],
			"time": "44",
			"totalRequestTime": "44",
			"iterationResults": {}
		},
		{
			"name": "Update Animal ERROR 5",
			"id": "bd55aa7a-feaf-4353-a2b0-9db7d8b223d4",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"tests": {
				"name": "Status 409 Conflict: Unsuccessful PUT request due to name conflict",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 409 Conflict: Unsuccessful PUT request due to name conflict": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"221"
			],
			"allTests": [
				{
					"Status 409 Conflict: Unsuccessful PUT request due to name conflict": true
				}
			],
			"time": "221",
			"totalRequestTime": "221",
			"iterationResults": {}
		},
		{
			"name": "Update Animal ERROR 6",
			"id": "ada1d0f1-351a-41ca-9f98-4f16a6d182f7",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Status 403 Forbidden: Unsuccessful PUT request due to missing data",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful PUT request due to missing data": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"46"
			],
			"allTests": [
				{
					"Status 403 Forbidden: Unsuccessful PUT request due to missing data": true
				}
			],
			"time": "46",
			"totalRequestTime": "46",
			"iterationResults": {}
		},
		{
			"name": "Update Animal ERROR 7",
			"id": "f04ba4a4-d4bb-411a-91c6-50d5e1d2ee19",
			"url": "https://kraftme-223903.appspot.com/animals/123412341234123t",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Status 403 Forbidden: Unsuccessful PUT request due to invalid animal ID",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful PUT request due to invalid animal ID": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"46"
			],
			"allTests": [
				{
					"Status 403 Forbidden: Unsuccessful PUT request due to invalid animal ID": true
				}
			],
			"time": "46",
			"totalRequestTime": "46",
			"iterationResults": {}
		},
		{
			"name": "Update Animal ERROR 8",
			"id": "62903a22-704a-4b1c-b559-8d757a3e32e3",
			"url": "https://kraftme-223903.appspot.com/animals/1234123412341234",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "Status 404 Not Found: Unsuccessful PUT, animal ID not found",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 404 Not Found: Unsuccessful PUT, animal ID not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"114"
			],
			"allTests": [
				{
					"Status 404 Not Found: Unsuccessful PUT, animal ID not found": true
				}
			],
			"time": "114",
			"totalRequestTime": "114",
			"iterationResults": {}
		},
		{
			"name": "Update Animal",
			"id": "db22bd6f-6fc3-4208-a0bf-40ab055ea08a",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 303,
				"name": "See Other",
				"detail": {
					"name": "See Other",
					"detail": "The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), it should be assumed that the server has received the data and the redirect should be issued with a separate GET message."
				}
			},
			"tests": {
				"name": "Status 303 See Other: go to Location returned to view updated animal record",
				"status": "pass",
				"Location found: https://kraftme-223903.appspot.com/animals/6223930792607744": true
			},
			"testPassFailCounts": {
				"Status 303 See Other: go to Location returned to view updated animal record": {
					"pass": 1,
					"fail": 0
				},
				"Location found: https://kraftme-223903.appspot.com/animals/6223930792607744": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"312"
			],
			"allTests": [
				{
					"Status 303 See Other: go to Location returned to view updated animal record": true,
					"Location found: https://kraftme-223903.appspot.com/animals/6223930792607744": true
				}
			],
			"time": "312",
			"totalRequestTime": "312",
			"iterationResults": {}
		},
		{
			"name": "Confirm Updated Animal Contents w/ Location",
			"id": "6d00e7f0-038d-4f39-a98c-f20baea37fc4",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status: 200 OK",
				"status": "pass",
				"Correct animal content": true,
				"Correct animal ID": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Correct animal content": {
					"pass": 1,
					"fail": 0
				},
				"Correct animal ID": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"66"
			],
			"allTests": [
				{
					"Status: 200 OK": true,
					"Correct animal content": true,
					"Correct animal ID": true
				}
			],
			"time": "66",
			"totalRequestTime": "66",
			"iterationResults": {}
		},
		{
			"name": "Get All Enclosures ERROR 1",
			"id": "8630afd1-ea8b-414c-be33-2e65e2085c4a",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"44"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: invalid credentials": true
				}
			],
			"time": "44",
			"totalRequestTime": "44",
			"iterationResults": {}
		},
		{
			"name": "Get All Enclosures ERROR 2",
			"id": "7b4d3d81-bf42-43dc-b362-58d3e1baa339",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: missing credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"55"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: missing credentials": true
				}
			],
			"time": "55",
			"totalRequestTime": "55",
			"iterationResults": {}
		},
		{
			"name": "Get All Enclosures ERROR 3",
			"id": "dd7df5ea-6221-4652-9741-c30c6254de42",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"48"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "48",
			"totalRequestTime": "48",
			"iterationResults": {}
		},
		{
			"name": "Get All Enclosures 1",
			"id": "73980ca8-e163-411e-9b7a-9c9115c4aedf",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {},
			"times": [
				"338"
			],
			"allTests": [
				{}
			],
			"time": "338",
			"totalRequestTime": "338",
			"iterationResults": {}
		},
		{
			"name": "Get All Enclosures 2",
			"id": "136533ed-2f01-4835-a9c9-e0a3ae1f6781",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status: 200 OK": true,
				"Content-Type returned is application/json; charset=utf-8": true,
				"Found 12 enclosure(s)": true,
				"Found 2 pagination link(s)": true,
				"Correct number of pagination links": true,
				"Each enclosure has a self link": true,
				"Current enclosure ID is 5648434904170496": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 3,
					"fail": 0
				},
				"Content-Type returned is application/json; charset=utf-8": {
					"pass": 3,
					"fail": 0
				},
				"Found 12 enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 2 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Current enclosure ID is 5648434904170496": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"335",
				"335",
				"260"
			],
			"allTests": [
				{
					"Status: 200 OK": true,
					"Content-Type returned is application/json; charset=utf-8": true
				},
				{
					"Status: 200 OK": true,
					"Content-Type returned is application/json; charset=utf-8": true
				},
				{
					"Status: 200 OK": true,
					"Content-Type returned is application/json; charset=utf-8": true,
					"Found 12 enclosure(s)": true,
					"Found 2 pagination link(s)": true,
					"Correct number of pagination links": true,
					"Each enclosure has a self link": true,
					"Current enclosure ID is 5648434904170496": true
				}
			],
			"time": "260",
			"totalRequestTime": 930,
			"iterationResults": {}
		},
		{
			"name": "Get User's Enclosures ERROR 1",
			"id": "5a9c4c78-c0d2-4ac0-8e40-74420f60fe0d",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: missing credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"45"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: missing credentials": true
				}
			],
			"time": "45",
			"totalRequestTime": "45",
			"iterationResults": {}
		},
		{
			"name": "Get User's Enclosures ERROR 2",
			"id": "0a9687b8-5a95-4329-8520-f49f2986611d",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"49"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: invalid credentials": true
				}
			],
			"time": "49",
			"totalRequestTime": "49",
			"iterationResults": {}
		},
		{
			"name": "Get User's Enclosures ERROR 3",
			"id": "793394da-3c57-499a-9291-ece03bb0f295",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: provided credentials do not have access to userID's enclosures",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: provided credentials do not have access to userID's enclosures": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"45"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: provided credentials do not have access to userID's enclosures": true
				}
			],
			"time": "45",
			"totalRequestTime": "45",
			"iterationResults": {}
		},
		{
			"name": "Get User's Enclosures ERROR 4",
			"id": "56212bf1-bf8c-416a-8698-bedc785e713e",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"46"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "46",
			"totalRequestTime": "46",
			"iterationResults": {}
		},
		{
			"name": "Get User's Enclosures 1",
			"id": "2b35b8e0-2407-4588-bfa6-10d244824e08",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {},
			"times": [
				"130"
			],
			"allTests": [
				{}
			],
			"time": "130",
			"totalRequestTime": "130",
			"iterationResults": {}
		},
		{
			"name": "Get User's Enclosures 2",
			"id": "f822b94a-2344-49e0-a402-a677b5823223",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status: 200 OK",
				"status": "pass",
				"Content-Type returned is application/json; charset=utf-8": true,
				"Found 0 enclosure(s)": true,
				"Found 0 pagination link(s)": true,
				"Correct number of pagination links": true,
				"Each enclosure has a self link": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type returned is application/json; charset=utf-8": {
					"pass": 1,
					"fail": 0
				},
				"Found 0 enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 0 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure has a self link": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"155"
			],
			"allTests": [
				{
					"Status: 200 OK": true,
					"Content-Type returned is application/json; charset=utf-8": true,
					"Found 0 enclosure(s)": true,
					"Found 0 pagination link(s)": true,
					"Correct number of pagination links": true,
					"Each enclosure has a self link": true
				}
			],
			"time": "155",
			"totalRequestTime": "155",
			"iterationResults": {}
		},
		{
			"name": "Create User Enclosure ERROR 1",
			"id": "9039dd29-5d79-48ef-aec6-8c87c48ff9ad",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: unsuccessful POST request, missing user credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: unsuccessful POST request, missing user credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"42"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: unsuccessful POST request, missing user credentials": true
				}
			],
			"time": "42",
			"totalRequestTime": "42",
			"iterationResults": {}
		},
		{
			"name": "Create User Enclosure ERROR 2",
			"id": "68969163-9e14-4d68-9ef3-fdc4de35f771",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: unsuccessful POST request, invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: unsuccessful POST request, invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"52"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: unsuccessful POST request, invalid credentials": true
				}
			],
			"time": "52",
			"totalRequestTime": "52",
			"iterationResults": {}
		},
		{
			"name": "Create User Enclosure ERROR 3",
			"id": "cca97de7-0137-42de-a88d-54dd69bd308e",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"47"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "47",
			"totalRequestTime": "47",
			"iterationResults": {}
		},
		{
			"name": "Create User Enclosure ERROR 4",
			"id": "6f9e7734-3672-4008-8e44-e691b062bd52",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"tests": {
				"name": "Status 409 Conflict: enclosure number already exists",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 409 Conflict: enclosure number already exists": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"64"
			],
			"allTests": [
				{
					"Status 409 Conflict: enclosure number already exists": true
				}
			],
			"time": "64",
			"totalRequestTime": "64",
			"iterationResults": {}
		},
		{
			"name": "Create User Enclosure ERROR 5",
			"id": "35dc29a7-c871-4893-b476-39c77f65181b",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Status 403 Forbidden: missing data",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: missing data": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"42"
			],
			"allTests": [
				{
					"Status 403 Forbidden: missing data": true
				}
			],
			"time": "42",
			"totalRequestTime": "42",
			"iterationResults": {}
		},
		{
			"name": "Create User Enclosure",
			"id": "692fef86-0641-46cb-908d-3b05135f1c11",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "Status 201 Created: Successful POST request",
				"status": "pass",
				"New, and now current, user enclosure ID is 5765606242516992": true
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"New, and now current, user enclosure ID is 5765606242516992": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"262"
			],
			"allTests": [
				{
					"Status 201 Created: Successful POST request": true,
					"New, and now current, user enclosure ID is 5765606242516992": true
				}
			],
			"time": "262",
			"totalRequestTime": "262",
			"iterationResults": {}
		},
		{
			"name": "Confirm Enclosure Count Increment Global",
			"id": "338db2c9-b3c3-4686-b8a1-b3e5a4def42a",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status: 200 OK": true,
				"Found 13 enclosure(s)": true,
				"Found 2 pagination link(s)": true,
				"Correct number of pagination links": true,
				"Each enclosure item has a self link": true,
				"Contains most recently created enclosure ID": true,
				"Contains previously existing enclosure ID(s)": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 3,
					"fail": 0
				},
				"Found 13 enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 2 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Contains most recently created enclosure ID": {
					"pass": 1,
					"fail": 0
				},
				"Contains previously existing enclosure ID(s)": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"149",
				"146",
				"134"
			],
			"allTests": [
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true,
					"Found 13 enclosure(s)": true,
					"Found 2 pagination link(s)": true,
					"Correct number of pagination links": true,
					"Each enclosure item has a self link": true,
					"Contains most recently created enclosure ID": true,
					"Contains previously existing enclosure ID(s)": true
				}
			],
			"time": "134",
			"totalRequestTime": 429,
			"iterationResults": {}
		},
		{
			"name": "Confirm Enclosure Count Increment User",
			"id": "435ef932-19f6-4447-bf40-9fa4166ca07a",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status: 200 OK",
				"status": "pass",
				"Found 1 user's enclosure(s)": true,
				"Found 0 pagination link(s)": true,
				"Correct number of pagination links": true,
				"Each enclosure item has a self link": true,
				"Contains most recently created enclosure ID": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Found 1 user's enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 0 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Contains most recently created enclosure ID": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"144"
			],
			"allTests": [
				{
					"Status: 200 OK": true,
					"Found 1 user's enclosure(s)": true,
					"Found 0 pagination link(s)": true,
					"Correct number of pagination links": true,
					"Each enclosure item has a self link": true,
					"Contains most recently created enclosure ID": true
				}
			],
			"time": "144",
			"totalRequestTime": "144",
			"iterationResults": {}
		},
		{
			"name": "Get an Enclosure ERROR 1",
			"id": "94ccd8c4-16dc-4744-acb0-77583e68580e",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: missing user credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing user credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"42"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: missing user credentials": true
				}
			],
			"time": "42",
			"totalRequestTime": "42",
			"iterationResults": {}
		},
		{
			"name": "Get an Enclosure ERROR 2",
			"id": "b0dff91d-e380-412e-8032-5ab4ff62c4d1",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"52"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: invalid credentials": true
				}
			],
			"time": "52",
			"totalRequestTime": "52",
			"iterationResults": {}
		},
		{
			"name": "Get an Enclosure ERROR 3",
			"id": "ddf08cdd-f68b-4491-8982-64d9f68071dc",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only users application.json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only users application.json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"49"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only users application.json": true
				}
			],
			"time": "49",
			"totalRequestTime": "49",
			"iterationResults": {}
		},
		{
			"name": "Get an Enclosure",
			"id": "d88352f5-830b-4ef6-94b8-e15b7a62e8a8",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status: 200 OK",
				"status": "pass",
				"Content-Type returned is application/json; charset=utf-8": true,
				"Correct enclosure ID: 5765606242516992": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type returned is application/json; charset=utf-8": {
					"pass": 1,
					"fail": 0
				},
				"Correct enclosure ID: 5765606242516992": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"95"
			],
			"allTests": [
				{
					"Status: 200 OK": true,
					"Content-Type returned is application/json; charset=utf-8": true,
					"Correct enclosure ID: 5765606242516992": true
				}
			],
			"time": "95",
			"totalRequestTime": "95",
			"iterationResults": {}
		},
		{
			"name": "Update all Enclosures ERROR",
			"id": "71cda3ec-3bac-4a5d-808c-935d98fb48bc",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed",
				"detail": {
					"name": "Method Not Allowed",
					"detail": "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
				}
			},
			"tests": {
				"name": "Status 405 Method Not Allowed",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 405 Method Not Allowed": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"39"
			],
			"allTests": [
				{
					"Status 405 Method Not Allowed": true
				}
			],
			"time": "39",
			"totalRequestTime": "39",
			"iterationResults": {}
		},
		{
			"name": "Update all User's Enclosures ERROR",
			"id": "bb51fe32-a100-4d77-8ac6-d3d4820b0299",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed",
				"detail": {
					"name": "Method Not Allowed",
					"detail": "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
				}
			},
			"tests": {
				"name": "Status 405 Method Not Allowed",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 405 Method Not Allowed": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"45"
			],
			"allTests": [
				{
					"Status 405 Method Not Allowed": true
				}
			],
			"time": "45",
			"totalRequestTime": "45",
			"iterationResults": {}
		},
		{
			"name": "Update User's Enclosure ERROR 1",
			"id": "838f3aa9-c028-46fc-b327-ab35b72f69a9",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"tests": {
				"name": "Status 409 Conflict: unsuccessful PUT, number conflict",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 409 Conflict: unsuccessful PUT, number conflict": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"101"
			],
			"allTests": [
				{
					"Status 409 Conflict: unsuccessful PUT, number conflict": true
				}
			],
			"time": "101",
			"totalRequestTime": "101",
			"iterationResults": {}
		},
		{
			"name": "Update User's Enclosure ERROR 2",
			"id": "7654a46e-e6ec-43c2-a04e-ad3ed52170cf",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Status 403 Forbidden: Unsuccessful PUT, missing data",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful PUT, missing data": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"47"
			],
			"allTests": [
				{
					"Status 403 Forbidden: Unsuccessful PUT, missing data": true
				}
			],
			"time": "47",
			"totalRequestTime": "47",
			"iterationResults": {}
		},
		{
			"name": "Update User's Enclosure ERROR 3",
			"id": "c1e3a301-6f4d-435c-8158-2b099dfc69b1",
			"url": "https://kraftme-223903.appspot.com/enclosures/123412341234123t",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Status 403 Forbidden: unsuccessful PUT, invalid enclosure ID",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: unsuccessful PUT, invalid enclosure ID": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"47"
			],
			"allTests": [
				{
					"Status 403 Forbidden: unsuccessful PUT, invalid enclosure ID": true
				}
			],
			"time": "47",
			"totalRequestTime": "47",
			"iterationResults": {}
		},
		{
			"name": "Update User's Enclosure ERROR 4",
			"id": "c7832991-9ed2-4a40-bbf9-fce49387434e",
			"url": "https://kraftme-223903.appspot.com/enclosures/1234123412341234",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "Status 404 Not Found: Unsuccessful PUT, enclosure ID not found",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 404 Not Found: Unsuccessful PUT, enclosure ID not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"63"
			],
			"allTests": [
				{
					"Status 404 Not Found: Unsuccessful PUT, enclosure ID not found": true
				}
			],
			"time": "63",
			"totalRequestTime": "63",
			"iterationResults": {}
		},
		{
			"name": "Update User's Enclosure ERROR 5",
			"id": "d9a7b164-2df3-4e78-bdff-e1d6113c3426",
			"url": "https://kraftme-223903.appspot.com/enclosures/{{enclsoureID}}",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"43"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "43",
			"totalRequestTime": "43",
			"iterationResults": {}
		},
		{
			"name": "Update User's Enclosure ERROR 6",
			"id": "98eb60e4-ea08-4643-866b-31294d723d25",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: user does not keep this enclosure",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user does not keep this enclosure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"165"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: user does not keep this enclosure": true
				}
			],
			"time": "165",
			"totalRequestTime": "165",
			"iterationResults": {}
		},
		{
			"name": "Update User's Enclosure ERROR 7",
			"id": "7daac52f-a677-4531-842b-c7ddc67d5d00",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: missing credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"43"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: missing credentials": true
				}
			],
			"time": "43",
			"totalRequestTime": "43",
			"iterationResults": {}
		},
		{
			"name": "Update User's Enclosure ERROR 8",
			"id": "e28d8edb-a88e-4d54-b137-2a08c8206432",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"45"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: invalid credentials": true
				}
			],
			"time": "45",
			"totalRequestTime": "45",
			"iterationResults": {}
		},
		{
			"name": "Update User's Enclosure",
			"id": "8f8b0a66-0077-4bb6-9abc-82a1cd1cf175",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 303,
				"name": "See Other",
				"detail": {
					"name": "See Other",
					"detail": "The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), it should be assumed that the server has received the data and the redirect should be issued with a separate GET message."
				}
			},
			"tests": {
				"name": "Status 303 See Other: successful POST request, Location provided",
				"status": "pass",
				"Location found: https://kraftme-223903.appspot.com/enclosures/5765606242516992": true
			},
			"testPassFailCounts": {
				"Status 303 See Other: successful POST request, Location provided": {
					"pass": 1,
					"fail": 0
				},
				"Location found: https://kraftme-223903.appspot.com/enclosures/5765606242516992": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"207"
			],
			"allTests": [
				{
					"Status 303 See Other: successful POST request, Location provided": true,
					"Location found: https://kraftme-223903.appspot.com/enclosures/5765606242516992": true
				}
			],
			"time": "207",
			"totalRequestTime": "207",
			"iterationResults": {}
		},
		{
			"name": "Confirm Updated Enclosure Contents w/ Location",
			"id": "0e7a8c5e-cd2a-435c-b016-553ea2da366a",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status: 200 OK",
				"status": "pass",
				"Correct enclosure content": true,
				"Correct enclosure ID": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Correct enclosure content": {
					"pass": 1,
					"fail": 0
				},
				"Correct enclosure ID": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"232"
			],
			"allTests": [
				{
					"Status: 200 OK": true,
					"Correct enclosure content": true,
					"Correct enclosure ID": true
				}
			],
			"time": "232",
			"totalRequestTime": "232",
			"iterationResults": {}
		},
		{
			"name": "Put Animal in Enclosure 1",
			"id": "00000353-fad4-4e73-b6c3-cce628ba1d4c",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 303,
				"name": "See Other",
				"detail": {
					"name": "See Other",
					"detail": "The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), it should be assumed that the server has received the data and the redirect should be issued with a separate GET message."
				}
			},
			"tests": {
				"name": "Status 303 See Other: go to Location to check updated object",
				"status": "pass",
				"Location found: https://kraftme-223903.appspot.com/animals/6223930792607744": true
			},
			"testPassFailCounts": {
				"Status 303 See Other: go to Location to check updated object": {
					"pass": 1,
					"fail": 0
				},
				"Location found: https://kraftme-223903.appspot.com/animals/6223930792607744": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"199"
			],
			"allTests": [
				{
					"Status 303 See Other: go to Location to check updated object": true,
					"Location found: https://kraftme-223903.appspot.com/animals/6223930792607744": true
				}
			],
			"time": "199",
			"totalRequestTime": "199",
			"iterationResults": {}
		},
		{
			"name": "Confirm Assigned Animal 1",
			"id": "30fcdff2-4421-4ca3-b824-94dba65c401a",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status 200 OK",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 200 OK": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"205"
			],
			"allTests": [
				{
					"Status 200 OK": true
				}
			],
			"time": "205",
			"totalRequestTime": "205",
			"iterationResults": {}
		},
		{
			"name": "Delete All Enclosures ERROR",
			"id": "57e6a43f-5061-4526-af32-9815cb72353e",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed",
				"detail": {
					"name": "Method Not Allowed",
					"detail": "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
				}
			},
			"tests": {
				"name": "Status 405: request method not allowed",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 405: request method not allowed": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"40"
			],
			"allTests": [
				{
					"Status 405: request method not allowed": true
				}
			],
			"time": "40",
			"totalRequestTime": "40",
			"iterationResults": {}
		},
		{
			"name": "Delete User Enclosure ERROR 1",
			"id": "da62e60d-6260-4949-8e1d-955fa00cf644",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"44"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: invalid credentials": true
				}
			],
			"time": "44",
			"totalRequestTime": "44",
			"iterationResults": {}
		},
		{
			"name": "Delete User Enclosure ERROR 2",
			"id": "c1f6b4c3-11c6-45ca-a99b-cd9b0c1e41d3",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: user does not keep this enclosure",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user does not keep this enclosure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"176"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: user does not keep this enclosure": true
				}
			],
			"time": "176",
			"totalRequestTime": "176",
			"iterationResults": {}
		},
		{
			"name": "Delete User Enclosure ERROR 3",
			"id": "daf48e1e-e3f7-4f88-8f08-c896183d5bb1",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"45"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "45",
			"totalRequestTime": "45",
			"iterationResults": {}
		},
		{
			"name": "Delete User Enclosure",
			"id": "173e2958-dc79-4923-963a-d7359bf1331c",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "Status 204 No Content",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 204 No Content": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"75"
			],
			"allTests": [
				{
					"Status 204 No Content": true
				}
			],
			"time": "75",
			"totalRequestTime": "75",
			"iterationResults": {}
		},
		{
			"name": "Confirm Deleted Enclosure Global",
			"id": "0a269b5f-a79d-4b8a-ae69-ae7f80f4512d",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status: 200 OK": true,
				"Found 12 enclosure(s)": true,
				"Found 2 pagination link(s)": true,
				"Correct number of pagination links": true,
				"Each enclosure item has a self link": true,
				"Does not contain most recently deleted enclosure ID": true,
				"Contains previously existing enclosure ID(s)": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 3,
					"fail": 0
				},
				"Found 12 enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 2 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Does not contain most recently deleted enclosure ID": {
					"pass": 1,
					"fail": 0
				},
				"Contains previously existing enclosure ID(s)": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"128",
				"216",
				"231"
			],
			"allTests": [
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true,
					"Found 12 enclosure(s)": true,
					"Found 2 pagination link(s)": true,
					"Correct number of pagination links": true,
					"Each enclosure item has a self link": true,
					"Does not contain most recently deleted enclosure ID": true,
					"Contains previously existing enclosure ID(s)": true
				}
			],
			"time": "231",
			"totalRequestTime": 575,
			"iterationResults": {}
		},
		{
			"name": "Confirm Deleted Enclosure User",
			"id": "d3e965b4-0bc9-4062-b821-edac950efad3",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status: 200 OK",
				"status": "pass",
				"Found 0 user's enclosure(s)": true,
				"Found 0 pagination link(s)": true,
				"Correct number of pagination links": true,
				"Each enclosure item has a self link": true,
				"Does not contain most recently deleted enclosure ID": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Found 0 user's enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 0 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Does not contain most recently deleted enclosure ID": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"102"
			],
			"allTests": [
				{
					"Status: 200 OK": true,
					"Found 0 user's enclosure(s)": true,
					"Found 0 pagination link(s)": true,
					"Correct number of pagination links": true,
					"Each enclosure item has a self link": true,
					"Does not contain most recently deleted enclosure ID": true
				}
			],
			"time": "102",
			"totalRequestTime": "102",
			"iterationResults": {}
		},
		{
			"name": "Confirm Animal is No Longer Assigned to Enclosure",
			"id": "6efc3ed9-6e4c-46e4-be83-3f2e5079bbde",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Animal ID's enclosure is now set to null": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Animal ID's enclosure is now set to null": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"180"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Animal ID's enclosure is now set to null": true
				}
			],
			"time": "180",
			"totalRequestTime": "180",
			"iterationResults": {}
		},
		{
			"name": "Delete All Animals ERROR",
			"id": "03e0c194-e4ba-49b7-827f-bdf63a7232f4",
			"url": "https://kraftme-223903.appspot.com/animals",
			"totalTime": 0,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed",
				"detail": {
					"name": "Method Not Allowed",
					"detail": "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
				}
			},
			"tests": {
				"name": "Status 405: request method not allowed",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 405: request method not allowed": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"44"
			],
			"allTests": [
				{
					"Status 405: request method not allowed": true
				}
			],
			"time": "44",
			"totalRequestTime": "44",
			"iterationResults": {}
		},
		{
			"name": "Delete Animal ERROR 1",
			"id": "a87195e5-26a0-4b98-83b1-275ff02bf0d4",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"73"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: invalid credentials": true
				}
			],
			"time": "73",
			"totalRequestTime": "73",
			"iterationResults": {}
		},
		{
			"name": "Delete Animal ERROR 2",
			"id": "a5f328f9-d261-4428-aa88-f0f0ae8318f3",
			"url": "https://kraftme-223903.appspot.com/animals/5630121163620352",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: user does not keep this animal's enclosure",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user does not keep this animal's enclosure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"96"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: user does not keep this animal's enclosure": true
				}
			],
			"time": "96",
			"totalRequestTime": "96",
			"iterationResults": {}
		},
		{
			"name": "Delete Animal ERROR 3",
			"id": "0f2f0e04-f2e3-4b38-a203-1a909a7d2547",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"43"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "43",
			"totalRequestTime": "43",
			"iterationResults": {}
		},
		{
			"name": "Delete Animal",
			"id": "a8259cc4-dd43-493f-84f3-46c9a8295205",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "Status 204 No Content",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 204 No Content": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"68"
			],
			"allTests": [
				{
					"Status 204 No Content": true
				}
			],
			"time": "68",
			"totalRequestTime": "68",
			"iterationResults": {}
		},
		{
			"name": "Confirm Deleted Animal",
			"id": "9d3ec78b-da42-4ccf-97ce-d56ea3dc59a4",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status: 200 OK": true,
				"Found 18 animals(s)": true,
				"Correct number of pagination links": true,
				"Each animal item has a self link": true,
				"Does not contain most recently deleted animal ID": true,
				"Contains previously existing animal ID(s)": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 4,
					"fail": 0
				},
				"Found 18 animals(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each animal item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Does not contain most recently deleted animal ID": {
					"pass": 1,
					"fail": 0
				},
				"Contains previously existing animal ID(s)": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"345",
				"133",
				"146",
				"218"
			],
			"allTests": [
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true
				},
				{
					"Status: 200 OK": true,
					"Found 18 animals(s)": true,
					"Correct number of pagination links": true,
					"Each animal item has a self link": true,
					"Does not contain most recently deleted animal ID": true,
					"Contains previously existing animal ID(s)": true
				}
			],
			"time": "218",
			"totalRequestTime": 842,
			"iterationResults": {}
		},
		{
			"name": "Delete User ERROR 1",
			"id": "52ba0c0d-e0f4-41ca-9772-956c47d899b6",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: missing credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"48"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: missing credentials": true
				}
			],
			"time": "48",
			"totalRequestTime": "48",
			"iterationResults": {}
		},
		{
			"name": "Delete User ERROR 2",
			"id": "90700779-9c10-4cb9-a2af-46729e60f7cf",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Status 403 Forbidden: a user cannot delete a user account",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: a user cannot delete a user account": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"390"
			],
			"allTests": [
				{
					"Status 403 Forbidden: a user cannot delete a user account": true
				}
			],
			"time": "390",
			"totalRequestTime": "390",
			"iterationResults": {}
		},
		{
			"name": "Delete User ERROR 3",
			"id": "cfb43c82-0162-4562-be9c-4c89d0a34342",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"53"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "53",
			"totalRequestTime": "53",
			"iterationResults": {}
		},
		{
			"name": "Delete User 1",
			"id": "20fed6c6-a8c0-42cd-a489-2e8b9993fcd8",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "Status 204 No Content",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 204 No Content": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"478"
			],
			"allTests": [
				{
					"Status 204 No Content": true
				}
			],
			"time": "478",
			"totalRequestTime": "478",
			"iterationResults": {}
		},
		{
			"name": "Confirm Deleted User 1",
			"id": "6bab3fcf-a409-4aa1-86f5-08f32c5483be",
			"url": "https://kraftme-223903.appspot.com/users",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Found 38 users(s)": true,
				"Does not contain most recently deleted user ID": true,
				"Still contains other previously existing user ID(s)": true,
				"Current user ID is auth0|5c061cbacd06c82e39be6589": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Found 38 users(s)": {
					"pass": 1,
					"fail": 0
				},
				"Does not contain most recently deleted user ID": {
					"pass": 1,
					"fail": 0
				},
				"Still contains other previously existing user ID(s)": {
					"pass": 1,
					"fail": 0
				},
				"Current user ID is auth0|5c061cbacd06c82e39be6589": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"514"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Found 38 users(s)": true,
					"Does not contain most recently deleted user ID": true,
					"Still contains other previously existing user ID(s)": true,
					"Current user ID is auth0|5c061cbacd06c82e39be6589": true
				}
			],
			"time": "514",
			"totalRequestTime": "514",
			"iterationResults": {}
		},
		{
			"name": "User Authorization 2",
			"id": "b2a0ccd3-5864-4a7e-ada6-c70b77da2343",
			"url": "https://kraftme-223903.appspot.com/login",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status 201 Created: Successful POST request",
				"status": "pass",
				"User ID Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJuaWNrbmFtZSI6IjMyYWUxMDdhLTY3MTctNDNlMS04NWI0LTUxYWFlN2E4N2M4MSIsIm5hbWUiOiIzMmFlMTA3YS02NzE3LTQzZTEtODViNC01MWFhZTdhODdjODFAb3N1LXpvby5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjdjYWM2ODBmYmI4NGJjNGE3NDJjNDNiOTc0MGRhYjk_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkYzMi5wbmciLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0wNFQwNjoyMTowNS4wNTZaIiwiZW1haWwiOiIzMmFlMTA3YS02NzE3LTQzZTEtODViNC01MWFhZTdhODdjODFAb3N1LXpvby5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9rcmFmdG1lLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1YzAzMDdlNDY0OWJkMzJkZTNiZGI2YTAiLCJhdWQiOiJIdzZNRmRPck5JOUtFMWNiYlZIckF3aXhHSFZuMjlDSCIsImlhdCI6MTU0MzkwNDQ2NSwiZXhwIjoxNTQzOTQwNDY1fQ.TmMr1QVfKfGGkSWHCaIGuP68xSaBerF78EJ2OvHF-xWSdFKQ02Bd0vzyyQDQp6qSRdSBQDXAi5fpD7mpXIaisMZiRacp8UdHBq5RXtUHpoXGe5ruEOWKWM-eXRPG_lJtR1h001S8vJg_qi79_UcN3BysEkcg3PfnV2C9ld4qTFQZc2uuH5sSWR_ZDYFdvxMjrC7Km-tvA5JWzYmGuqgHfcM4DEp-zXt_UwQw62pZYtkgAZ9JQH14M8P24WfbZzmf0V8InaO5Dm6Az2gFmjPHuqQKNAja33lfic71JJE64qr0YA4WsVL_BleJgM2l2nGDxHNSTYdxFSiTBu1DRd-lOg": true
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"User ID Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJuaWNrbmFtZSI6IjMyYWUxMDdhLTY3MTctNDNlMS04NWI0LTUxYWFlN2E4N2M4MSIsIm5hbWUiOiIzMmFlMTA3YS02NzE3LTQzZTEtODViNC01MWFhZTdhODdjODFAb3N1LXpvby5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjdjYWM2ODBmYmI4NGJjNGE3NDJjNDNiOTc0MGRhYjk_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkYzMi5wbmciLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0wNFQwNjoyMTowNS4wNTZaIiwiZW1haWwiOiIzMmFlMTA3YS02NzE3LTQzZTEtODViNC01MWFhZTdhODdjODFAb3N1LXpvby5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9rcmFmdG1lLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1YzAzMDdlNDY0OWJkMzJkZTNiZGI2YTAiLCJhdWQiOiJIdzZNRmRPck5JOUtFMWNiYlZIckF3aXhHSFZuMjlDSCIsImlhdCI6MTU0MzkwNDQ2NSwiZXhwIjoxNTQzOTQwNDY1fQ.TmMr1QVfKfGGkSWHCaIGuP68xSaBerF78EJ2OvHF-xWSdFKQ02Bd0vzyyQDQp6qSRdSBQDXAi5fpD7mpXIaisMZiRacp8UdHBq5RXtUHpoXGe5ruEOWKWM-eXRPG_lJtR1h001S8vJg_qi79_UcN3BysEkcg3PfnV2C9ld4qTFQZc2uuH5sSWR_ZDYFdvxMjrC7Km-tvA5JWzYmGuqgHfcM4DEp-zXt_UwQw62pZYtkgAZ9JQH14M8P24WfbZzmf0V8InaO5Dm6Az2gFmjPHuqQKNAja33lfic71JJE64qr0YA4WsVL_BleJgM2l2nGDxHNSTYdxFSiTBu1DRd-lOg": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"532"
			],
			"allTests": [
				{
					"Status 201 Created: Successful POST request": true,
					"User ID Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJuaWNrbmFtZSI6IjMyYWUxMDdhLTY3MTctNDNlMS04NWI0LTUxYWFlN2E4N2M4MSIsIm5hbWUiOiIzMmFlMTA3YS02NzE3LTQzZTEtODViNC01MWFhZTdhODdjODFAb3N1LXpvby5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjdjYWM2ODBmYmI4NGJjNGE3NDJjNDNiOTc0MGRhYjk_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkYzMi5wbmciLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0wNFQwNjoyMTowNS4wNTZaIiwiZW1haWwiOiIzMmFlMTA3YS02NzE3LTQzZTEtODViNC01MWFhZTdhODdjODFAb3N1LXpvby5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9rcmFmdG1lLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1YzAzMDdlNDY0OWJkMzJkZTNiZGI2YTAiLCJhdWQiOiJIdzZNRmRPck5JOUtFMWNiYlZIckF3aXhHSFZuMjlDSCIsImlhdCI6MTU0MzkwNDQ2NSwiZXhwIjoxNTQzOTQwNDY1fQ.TmMr1QVfKfGGkSWHCaIGuP68xSaBerF78EJ2OvHF-xWSdFKQ02Bd0vzyyQDQp6qSRdSBQDXAi5fpD7mpXIaisMZiRacp8UdHBq5RXtUHpoXGe5ruEOWKWM-eXRPG_lJtR1h001S8vJg_qi79_UcN3BysEkcg3PfnV2C9ld4qTFQZc2uuH5sSWR_ZDYFdvxMjrC7Km-tvA5JWzYmGuqgHfcM4DEp-zXt_UwQw62pZYtkgAZ9JQH14M8P24WfbZzmf0V8InaO5Dm6Az2gFmjPHuqQKNAja33lfic71JJE64qr0YA4WsVL_BleJgM2l2nGDxHNSTYdxFSiTBu1DRd-lOg": true
				}
			],
			"time": "532",
			"totalRequestTime": "532",
			"iterationResults": {}
		},
		{
			"name": "Get User's Enclosures 3",
			"id": "a060cf30-b5a3-4a6a-9d6e-15311f0d1498",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status: 200 OK": true,
				"Content-Type returned is application/json; charset=utf-8": true,
				"Found 6 enclosure(s)": true,
				"Found 1 pagination link(s)": true,
				"Correct number of pagination links": true,
				"Each enclosure has a self link": true,
				"Current user enclosure ID is 5662005255995392": true
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 2,
					"fail": 0
				},
				"Content-Type returned is application/json; charset=utf-8": {
					"pass": 2,
					"fail": 0
				},
				"Found 6 enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 1 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Current user enclosure ID is 5662005255995392": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"311",
				"129"
			],
			"allTests": [
				{
					"Status: 200 OK": true,
					"Content-Type returned is application/json; charset=utf-8": true
				},
				{
					"Status: 200 OK": true,
					"Content-Type returned is application/json; charset=utf-8": true,
					"Found 6 enclosure(s)": true,
					"Found 1 pagination link(s)": true,
					"Correct number of pagination links": true,
					"Each enclosure has a self link": true,
					"Current user enclosure ID is 5662005255995392": true
				}
			],
			"time": "129",
			"totalRequestTime": 440,
			"iterationResults": {}
		},
		{
			"name": "Put Animal in Enclosure ERROR 1",
			"id": "e6fcb220-d757-400a-9ab4-6b3879b0b0ed",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/1234123412341234",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "Status 404 Not Found: Unsuccessful PUT, animal ID not found",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 404 Not Found: Unsuccessful PUT, animal ID not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"89"
			],
			"allTests": [
				{
					"Status 404 Not Found: Unsuccessful PUT, animal ID not found": true
				}
			],
			"time": "89",
			"totalRequestTime": "89",
			"iterationResults": {}
		},
		{
			"name": "Put Animal in Enclosure ERROR 2",
			"id": "d68f09cd-59f9-4f6b-9038-7145a50928fc",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/123412341234123",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Status 403 Forbidden: Unsuccessful PUT, invalid animal ID",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful PUT, invalid animal ID": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"164"
			],
			"allTests": [
				{
					"Status 403 Forbidden: Unsuccessful PUT, invalid animal ID": true
				}
			],
			"time": "164",
			"totalRequestTime": "164",
			"iterationResults": {}
		},
		{
			"name": "Put Animal in Enclosure ERROR 3",
			"id": "508c4337-4cc5-4022-a223-471669ac649f",
			"url": "https://kraftme-223903.appspot.com/enclosures/12341234123/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Status 403 Forbidden: Unsuccessful PUT, invalid enclosure ID",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful PUT, invalid enclosure ID": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"44"
			],
			"allTests": [
				{
					"Status 403 Forbidden: Unsuccessful PUT, invalid enclosure ID": true
				}
			],
			"time": "44",
			"totalRequestTime": "44",
			"iterationResults": {}
		},
		{
			"name": "Put Animal in Enclosure ERROR 4",
			"id": "b8abf29a-1689-4b5c-9fda-c31356841c50",
			"url": "https://kraftme-223903.appspot.com/enclosures/1234123412341234/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "Status 404 Not Found: Unsuccessful PUT, enclosure ID not found",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 404 Not Found: Unsuccessful PUT, enclosure ID not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"55"
			],
			"allTests": [
				{
					"Status 404 Not Found: Unsuccessful PUT, enclosure ID not found": true
				}
			],
			"time": "55",
			"totalRequestTime": "55",
			"iterationResults": {}
		},
		{
			"name": "Put Animal in Enclosure ERROR 5",
			"id": "e9110eef-0476-45a3-a69e-13396d24ba2d",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"91"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "91",
			"totalRequestTime": "91",
			"iterationResults": {}
		},
		{
			"name": "Put Animal in Enclosure ERROR 6",
			"id": "770d3050-7f72-4eac-aa46-ba3f5aeddc50",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"54"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: invalid credentials": true
				}
			],
			"time": "54",
			"totalRequestTime": "54",
			"iterationResults": {}
		},
		{
			"name": "Put Animal in Enclosure ERROR 7",
			"id": "c12bea75-9d67-47dc-aa97-17d4942e27a5",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: missing credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"39"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: missing credentials": true
				}
			],
			"time": "39",
			"totalRequestTime": "39",
			"iterationResults": {}
		},
		{
			"name": "Put Animal in Enclosure ERROR 8",
			"id": "b3fea445-5e1e-4697-9934-455490eb454c",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: user credentials do not own this enclosure",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user credentials do not own this enclosure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"59"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: user credentials do not own this enclosure": true
				}
			],
			"time": "59",
			"totalRequestTime": "59",
			"iterationResults": {}
		},
		{
			"name": "Put Animal in Enclosure ERROR 9",
			"id": "021c258b-9110-4e49-9112-7311f402c9e7",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5645015573331968",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Status 403 Forbidden: animal currently lives in another keeper's enclosure",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: animal currently lives in another keeper's enclosure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"115"
			],
			"allTests": [
				{
					"Status 403 Forbidden: animal currently lives in another keeper's enclosure": true
				}
			],
			"time": "115",
			"totalRequestTime": "115",
			"iterationResults": {}
		},
		{
			"name": "Put Animal in Enclosure 2",
			"id": "39459681-28a1-409a-962e-33c27e821cd0",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 303,
				"name": "See Other",
				"detail": {
					"name": "See Other",
					"detail": "The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), it should be assumed that the server has received the data and the redirect should be issued with a separate GET message."
				}
			},
			"tests": {
				"name": "Status 303 See Other: got to Location to check udpated object",
				"status": "pass",
				"Location found: https://kraftme-223903.appspot.com/animals/5185395654393856": true
			},
			"testPassFailCounts": {
				"Status 303 See Other: got to Location to check udpated object": {
					"pass": 1,
					"fail": 0
				},
				"Location found: https://kraftme-223903.appspot.com/animals/5185395654393856": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"83"
			],
			"allTests": [
				{
					"Status 303 See Other: got to Location to check udpated object": true,
					"Location found: https://kraftme-223903.appspot.com/animals/5185395654393856": true
				}
			],
			"time": "83",
			"totalRequestTime": "83",
			"iterationResults": {}
		},
		{
			"name": "Confirm Assigned Animal 2",
			"id": "c420829f-2823-4cb4-8d50-0e4e674940e2",
			"url": "https://kraftme-223903.appspot.com/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status 200 OK",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 200 OK": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"310"
			],
			"allTests": [
				{
					"Status 200 OK": true
				}
			],
			"time": "310",
			"totalRequestTime": "310",
			"iterationResults": {}
		},
		{
			"name": "Get Enclosure Animals 1",
			"id": "e3960402-fbe2-4e8a-b25d-2dc915dd7cab",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {},
			"times": [
				"172"
			],
			"allTests": [
				{}
			],
			"time": "172",
			"totalRequestTime": "172",
			"iterationResults": {}
		},
		{
			"name": "Get Enclosure Animals 2",
			"id": "40fda94a-767f-46c8-9d95-14a49c442c7e",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Status code is 200": true,
				"Found 7 animals(s)": true,
				"Found 1 pagination link(s)": true,
				"Correct number of pagination links": true,
				"Each animal has a self link": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 2,
					"fail": 0
				},
				"Found 7 animals(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 1 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each animal has a self link": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"155",
				"367"
			],
			"allTests": [
				{
					"Status code is 200": true
				},
				{
					"Status code is 200": true,
					"Found 7 animals(s)": true,
					"Found 1 pagination link(s)": true,
					"Correct number of pagination links": true,
					"Each animal has a self link": true
				}
			],
			"time": "367",
			"totalRequestTime": 522,
			"iterationResults": {}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 1",
			"id": "525a515b-8428-4204-ac5c-44dc87b41296",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: Unsuccessful DELETE, missing credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: Unsuccessful DELETE, missing credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"145"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: Unsuccessful DELETE, missing credentials": true
				}
			],
			"time": "145",
			"totalRequestTime": "145",
			"iterationResults": {}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 2",
			"id": "0270a795-9c78-4e45-a5e3-6c14e5d3c916",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: Unsuccessful DELETE, invalid credentials",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: Unsuccessful DELETE, invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"143"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: Unsuccessful DELETE, invalid credentials": true
				}
			],
			"time": "143",
			"totalRequestTime": "143",
			"iterationResults": {}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 3",
			"id": "f7e91be8-edfd-4d40-928d-f8bfb98475d0",
			"url": "https://kraftme-223903.appspot.com/enclosures/1234123412341234/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "Status 404 Nnot Found: Unsuccessful DELETE, enclosure ID not found",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 404 Nnot Found: Unsuccessful DELETE, enclosure ID not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"188"
			],
			"allTests": [
				{
					"Status 404 Nnot Found: Unsuccessful DELETE, enclosure ID not found": true
				}
			],
			"time": "188",
			"totalRequestTime": "188",
			"iterationResults": {}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 4",
			"id": "45b2020f-ed59-448a-ad2c-4b7ae0d78cb9",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/1234123412341234",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "Status 404 Not Found: Unsuccessful DELETE, animal ID not found",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 404 Not Found: Unsuccessful DELETE, animal ID not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"102"
			],
			"allTests": [
				{
					"Status 404 Not Found: Unsuccessful DELETE, animal ID not found": true
				}
			],
			"time": "102",
			"totalRequestTime": "102",
			"iterationResults": {}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 5",
			"id": "f40e5735-9d52-450a-8cf7-582d83cda274",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5735393697726464",
			"totalTime": 0,
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"tests": {
				"name": "Status 403 Forbidden: Unsuccessful DELETE, animal is being kept in another enclosure",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful DELETE, animal is being kept in another enclosure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"114"
			],
			"allTests": [
				{
					"Status 403 Forbidden: Unsuccessful DELETE, animal is being kept in another enclosure": true
				}
			],
			"time": "114",
			"totalRequestTime": "114",
			"iterationResults": {}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 6",
			"id": "0b7b0ef2-458a-4e27-91dd-6722d9880592",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"tests": {
				"name": "Status 406 Not Accepted: server only uses application/json",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"45"
			],
			"allTests": [
				{
					"Status 406 Not Accepted: server only uses application/json": true
				}
			],
			"time": "45",
			"totalRequestTime": "45",
			"iterationResults": {}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 7",
			"id": "4805843e-2ddf-434a-afba-315fedd332b9",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"tests": {
				"name": "Status 401 Unauthorized: user does not own this enclosure",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user does not own this enclosure": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"69"
			],
			"allTests": [
				{
					"Status 401 Unauthorized: user does not own this enclosure": true
				}
			],
			"time": "69",
			"totalRequestTime": "69",
			"iterationResults": {}
		},
		{
			"name": "Remove Animal from Enclosure",
			"id": "0da7d764-b73f-4ee0-bfc0-2882bd02925c",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "Status 204 No Content",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 204 No Content": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"83"
			],
			"allTests": [
				{
					"Status 204 No Content": true
				}
			],
			"time": "83",
			"totalRequestTime": "83",
			"iterationResults": {}
		},
		{
			"name": "Confirm Removed Animal",
			"id": "c32fb427-467b-4e4b-9f0d-0b5d840bfa97",
			"url": "https://kraftme-223903.appspot.com/animals/5185395654393856",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Enclosure ID not found in Animal ID": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Enclosure ID not found in Animal ID": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"68"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Enclosure ID not found in Animal ID": true
				}
			],
			"time": "68",
			"totalRequestTime": "68",
			"iterationResults": {}
		},
		{
			"name": "Delete User 2",
			"id": "5dc81209-deb8-44fe-950a-12c28c2b3bc9",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cbacd06c82e39be6589",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "Status 204 No Content",
				"status": "pass"
			},
			"testPassFailCounts": {
				"Status 204 No Content": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"414"
			],
			"allTests": [
				{
					"Status 204 No Content": true
				}
			],
			"time": "414",
			"totalRequestTime": "414",
			"iterationResults": {}
		},
		{
			"name": "Confirm Deleted User 2",
			"id": "858efd8c-8735-455f-910a-c2dc61e0cb37",
			"url": "https://kraftme-223903.appspot.com/users",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is 200",
				"status": "pass",
				"Found 37 users(s)": true,
				"Does not contain most recently deleted user ID": true,
				"Still contains other previously existing user ID(s)": true,
				"Current user ID is auth0|5c0307e4649bd32de3bdb6a0": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Found 37 users(s)": {
					"pass": 1,
					"fail": 0
				},
				"Does not contain most recently deleted user ID": {
					"pass": 1,
					"fail": 0
				},
				"Still contains other previously existing user ID(s)": {
					"pass": 1,
					"fail": 0
				},
				"Current user ID is auth0|5c0307e4649bd32de3bdb6a0": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"512"
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Found 37 users(s)": true,
					"Does not contain most recently deleted user ID": true,
					"Still contains other previously existing user ID(s)": true,
					"Current user ID is auth0|5c0307e4649bd32de3bdb6a0": true
				}
			],
			"time": "512",
			"totalRequestTime": "512",
			"iterationResults": {}
		}
	],
	"totalPass": 235,
	"totalFail": 0,
	"totalTime": 23530,
	"lifecycle": "done",
	"requests": [
		{
			"name": "Client Authorization",
			"id": "39434db5-45b8-4aae-a433-3ccf59cc33cc",
			"url": "https://kraftme-223903.appspot.com/oauth",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Client Access Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJpc3MiOiJodHRwczovL2tyYWZ0bWUuYXV0aDAuY29tLyIsInN1YiI6Ikh3Nk1GZE9yTkk5S0UxY2JiVkhyQXdpeEdIVm4yOUNIQGNsaWVudHMiLCJhdWQiOiJodHRwczovL2tyYWZ0bWUuYXV0aDAuY29tL2FwaS92Mi8iLCJpYXQiOjE1NDM5MDQ0MzksImV4cCI6MTU0Mzk5MDgzOSwiYXpwIjoiSHc2TUZkT3JOSTlLRTFjYmJWSHJBd2l4R0hWbjI5Q0giLCJzY29wZSI6InJlYWQ6Y2xpZW50X2dyYW50cyBjcmVhdGU6Y2xpZW50X2dyYW50cyBkZWxldGU6Y2xpZW50X2dyYW50cyB1cGRhdGU6Y2xpZW50X2dyYW50cyByZWFkOnVzZXJzIHVwZGF0ZTp1c2VycyBkZWxldGU6dXNlcnMgY3JlYXRlOnVzZXJzIHJlYWQ6dXNlcnNfYXBwX21ldGFkYXRhIHVwZGF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgZGVsZXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBjcmVhdGU6dXNlcnNfYXBwX21ldGFkYXRhIGNyZWF0ZTp1c2VyX3RpY2tldHMgcmVhZDpjbGllbnRzIHVwZGF0ZTpjbGllbnRzIGRlbGV0ZTpjbGllbnRzIGNyZWF0ZTpjbGllbnRzIHJlYWQ6Y2xpZW50X2tleXMgdXBkYXRlOmNsaWVudF9rZXlzIGRlbGV0ZTpjbGllbnRfa2V5cyBjcmVhdGU6Y2xpZW50X2tleXMgcmVhZDpjb25uZWN0aW9ucyB1cGRhdGU6Y29ubmVjdGlvbnMgZGVsZXRlOmNvbm5lY3Rpb25zIGNyZWF0ZTpjb25uZWN0aW9ucyByZWFkOnJlc291cmNlX3NlcnZlcnMgdXBkYXRlOnJlc291cmNlX3NlcnZlcnMgZGVsZXRlOnJlc291cmNlX3NlcnZlcnMgY3JlYXRlOnJlc291cmNlX3NlcnZlcnMgcmVhZDpkZXZpY2VfY3JlZGVudGlhbHMgdXBkYXRlOmRldmljZV9jcmVkZW50aWFscyBkZWxldGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGNyZWF0ZTpkZXZpY2VfY3JlZGVudGlhbHMgcmVhZDpydWxlcyB1cGRhdGU6cnVsZXMgZGVsZXRlOnJ1bGVzIGNyZWF0ZTpydWxlcyByZWFkOnJ1bGVzX2NvbmZpZ3MgdXBkYXRlOnJ1bGVzX2NvbmZpZ3MgZGVsZXRlOnJ1bGVzX2NvbmZpZ3MgcmVhZDplbWFpbF9wcm92aWRlciB1cGRhdGU6ZW1haWxfcHJvdmlkZXIgZGVsZXRlOmVtYWlsX3Byb3ZpZGVyIGNyZWF0ZTplbWFpbF9wcm92aWRlciBibGFja2xpc3Q6dG9rZW5zIHJlYWQ6c3RhdHMgcmVhZDp0ZW5hbnRfc2V0dGluZ3MgdXBkYXRlOnRlbmFudF9zZXR0aW5ncyByZWFkOmxvZ3MgcmVhZDpzaGllbGRzIGNyZWF0ZTpzaGllbGRzIGRlbGV0ZTpzaGllbGRzIHVwZGF0ZTp0cmlnZ2VycyByZWFkOnRyaWdnZXJzIHJlYWQ6Z3JhbnRzIGRlbGV0ZTpncmFudHMgcmVhZDpndWFyZGlhbl9mYWN0b3JzIHVwZGF0ZTpndWFyZGlhbl9mYWN0b3JzIHJlYWQ6Z3VhcmRpYW5fZW5yb2xsbWVudHMgZGVsZXRlOmd1YXJkaWFuX2Vucm9sbG1lbnRzIGNyZWF0ZTpndWFyZGlhbl9lbnJvbGxtZW50X3RpY2tldHMgcmVhZDp1c2VyX2lkcF90b2tlbnMgY3JlYXRlOnBhc3N3b3Jkc19jaGVja2luZ19qb2IgZGVsZXRlOnBhc3N3b3Jkc19jaGVja2luZ19qb2IgcmVhZDpjdXN0b21fZG9tYWlucyBkZWxldGU6Y3VzdG9tX2RvbWFpbnMgY3JlYXRlOmN1c3RvbV9kb21haW5zIHJlYWQ6ZW1haWxfdGVtcGxhdGVzIGNyZWF0ZTplbWFpbF90ZW1wbGF0ZXMgdXBkYXRlOmVtYWlsX3RlbXBsYXRlcyByZWFkOm1mYV9wb2xpY2llcyB1cGRhdGU6bWZhX3BvbGljaWVzIHJlYWQ6cm9sZXMgY3JlYXRlOnJvbGVzIGRlbGV0ZTpyb2xlcyB1cGRhdGU6cm9sZXMiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.GzKWtQZry8pJr1ZYOHG500_w3WKCAcs3FE8Vnl35LuGrO9AVujEG6I-I5yJ9MITvylXbwkv3f25Nhk2OoI_9br-5Lmh6Bkm7PxGJgRjCB0B35BDQNxZcTO8IrG5xnsqmlLcMQbKseC6Nk4pBhbMWbZtmCYFLRKmeTG9M7ccXIwZmjNlvFljV8T3omLHE4Ju2iOO1vDeiIB1F0cC21gq7myW5LGBrBiWkgRaQDdDnBqF_ivMsF80jC2jXcdHJZY51KIuN8FrwbxH1lS-9viV-HgDMr2ue_DJ0g-w5pN81I9eGL-111RXzSPw4wqky2ffIxO1pF-I0yf8CRRemleF1gQ": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get Users ERROR 1",
			"id": "25f03958-b65c-4a1b-aa23-7f8d213e02a5",
			"url": "https://kraftme-223903.appspot.com/users",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get Users ERROR 2",
			"id": "64529413-8ad6-456c-b219-f1c55f17f019",
			"url": "https://kraftme-223903.appspot.com/users",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user cannot access all user accounts": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get Users ERROR 3",
			"id": "7d4576b0-c1d7-4448-a0b4-88c23e7403ae",
			"url": "https://kraftme-223903.appspot.com/users",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get Users",
			"id": "2a31fe0e-5929-4796-8538-b8ff238b67bb",
			"url": "https://kraftme-223903.appspot.com/users",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Found 37 user(s)": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create User ERROR 1",
			"id": "046324ed-88d5-496c-b519-4ca0cea2fe00",
			"url": "https://kraftme-223903.appspot.com/users",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing client credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create User ERROR 2",
			"id": "ded83959-96a2-45ae-a2cd-5f1b426d5f98",
			"url": "https://kraftme-223903.appspot.com/users",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"testPassFailCounts": {
				"Status 409 Conflict: unsuccessful POST request, user already exists": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create User ERROR 3",
			"id": "8e54f12f-81e3-4357-b492-217cf570cf65",
			"url": "https://kraftme-223903.appspot.com/users",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create User 1",
			"id": "1ee114b8-fc35-4600-aa7d-08bfcdab99f2",
			"url": "https://kraftme-223903.appspot.com/users",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"New, and now current, user is 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create User 2",
			"id": "7353faf7-1bae-43f8-bb7f-44cd762e4810",
			"url": "https://kraftme-223903.appspot.com/users",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"Other user is 796cee8f-e275-4edd-878f-e209df15d75a@osu-zoo.com": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm User Count Increment",
			"id": "3b6febdd-8c7c-4b3c-960c-4361cdaa590a",
			"url": "https://kraftme-223903.appspot.com/users",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Found 39 user(s)": {
					"pass": 1,
					"fail": 0
				},
				"Contains new user's email 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": {
					"pass": 1,
					"fail": 0
				},
				"Contains other user's email 796cee8f-e275-4edd-878f-e209df15d75a@osu-zoo.com": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "User Authorization 1",
			"id": "91709a01-d8f3-4fff-bcce-dc999b2112eb",
			"url": "https://kraftme-223903.appspot.com/login",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"User ID Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJuaWNrbmFtZSI6IjU0NzdkZDBjLTM4YTYtNDM4OC1hMjk0LWRkYTY3YjA0ODA2MiIsIm5hbWUiOiI1NDc3ZGQwYy0zOGE2LTQzODgtYTI5NC1kZGE2N2IwNDgwNjJAb3N1LXpvby5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvODA3MTE0NjVhMmFhNTY4MDU2NGNmYjJlNTY2ZTY3Yjg_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkY1NC5wbmciLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0wNFQwNjoyMDo0NC4xMjBaIiwiZW1haWwiOiI1NDc3ZGQwYy0zOGE2LTQzODgtYTI5NC1kZGE2N2IwNDgwNjJAb3N1LXpvby5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9rcmFmdG1lLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1YzA2MWNiYTc1ODJjZTQ2MDdlZTdkN2IiLCJhdWQiOiJIdzZNRmRPck5JOUtFMWNiYlZIckF3aXhHSFZuMjlDSCIsImlhdCI6MTU0MzkwNDQ0NCwiZXhwIjoxNTQzOTQwNDQ0fQ.F-A7ksz7B2RmE5HPngz_sTx2VSiAhlz_u3NDBLFAxp904-E6TRg-qjNdJuYMW9x2vjlmOYts38lFNuWbHgxPLIbTBmAM1eqngzKQzXP7u8VG2DEALpnOXBC8quylLrwFF4kkUYHkSzWa50mXFfHg7BdRKFNEmAXvsxLb2aFSRRvnzcW4a2NhIpos7OYCs1exs92837bfcW5x9_CUDbggqi5Fpk3H10FXsDLSaf5t__kK9ObhbQU06U0ZGu1P8QPBh2kIjoP8ScTNOwGwUnWDEldqExb7jV0kxSPsIdbEnUX0OEZsHpbOQgMvwnd45CSft4__PUjqV27WmxcM6C7KzQ": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "User Authorization Other",
			"id": "73fa3665-22b3-4e63-acff-6eb8df435a31",
			"url": "https://kraftme-223903.appspot.com/login",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"User ID Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJuaWNrbmFtZSI6Ijc5NmNlZThmLWUyNzUtNGVkZC04NzhmLWUyMDlkZjE1ZDc1YSIsIm5hbWUiOiI3OTZjZWU4Zi1lMjc1LTRlZGQtODc4Zi1lMjA5ZGYxNWQ3NWFAb3N1LXpvby5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvMjU3YjhiMDcxNGYwMTYzYzI1Yzg0NjA2ZjU3Y2JiZGE_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkY3OS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0wNFQwNjoyMDo0NC43NjdaIiwiZW1haWwiOiI3OTZjZWU4Zi1lMjc1LTRlZGQtODc4Zi1lMjA5ZGYxNWQ3NWFAb3N1LXpvby5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9rcmFmdG1lLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1YzA2MWNiYWNkMDZjODJlMzliZTY1ODkiLCJhdWQiOiJIdzZNRmRPck5JOUtFMWNiYlZIckF3aXhHSFZuMjlDSCIsImlhdCI6MTU0MzkwNDQ0NCwiZXhwIjoxNTQzOTQwNDQ0fQ.O_eTi5npxNdaRgoOLZtKe6S2ExWLMGM-lDZUwca24xeaeLS2UHxJ8NnfUeyDRraMorU8pUFubLbD6ZOODJhOAZMsWpjYUL_aCuCQWMVSao-ocQaO2LckbqRwvtgWXuf1rt0tgHlV-NWcjw_Kkxt2fmrHmUvYssGYgUHZeo1SHpgyq51zwykcaq_LQy-T0Ii6XsGpUJGm3UNPw_1Q7veK6Dp10mIb7EcaAw-2njcCHinwY8srCmjBeYmnX8ycgnAm-_ARlShuodgnZtSe513iOQMyrHXWZS3qszhOvuiDfvGRYqIIvfooBsraRG2RStCA71S41rMIDnVRvwn1HZ_9tA": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get User ERROR 1",
			"id": "cd5ed16c-5a05-4eb3-a828-b56874d8d21e",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get User ERROR 2",
			"id": "15a22f10-9529-4bae-b5a6-c0377dac829a",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user cannot access another user's account": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get User ERROR 3",
			"id": "c85c25ec-8dd7-450b-ab19-da7f4dcbaf7d",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get User 1",
			"id": "09b0063d-5880-49f4-a355-e67417ebf3da",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Correct user 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get User 2",
			"id": "3467cb02-21ce-41af-86f8-6545abff984a",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Correct user 5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get All Animals ERROR 1",
			"id": "92bfbc40-ee1b-4c8f-81f5-d3c8d9f58544",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing user credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get All Animals ERROR 2",
			"id": "575fb6a1-4e76-419c-9040-4b8ac37d57f6",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get All Animals ERROR 3",
			"id": "55672572-20e7-43fe-884d-ae7611da44ef",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get All Animals 1",
			"id": "2ea30def-53f9-43ff-9f72-b059107b5ae2",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {}
		},
		{
			"name": "Get All Animals 2",
			"id": "53b74dde-2a9f-4e41-8d07-51b77a361938",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "199",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 4,
					"fail": 0
				},
				"Found 18 animal(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 3 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each animal item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Current animal ID is 5185395654393856": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create Animal ERROR 1",
			"id": "40397996-e51a-4e5e-8607-a0e72b4f810a",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: unsuccessful POST, missing user credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create Animal ERROR 2",
			"id": "36bb4e21-f133-4917-810a-c5497e0aa13e",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: unsuccessful POST, invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create Animal ERROR 3",
			"id": "0877df70-df98-4c7c-bedd-9345b4f6e9a4",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create Animal ERROR 4",
			"id": "e14e642d-27ae-4488-a6cd-e63ae5fdfcd2",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"testPassFailCounts": {
				"Status 409 Conflict: Unsuccessful POST request due to name conflict": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create Animal ERROR 5",
			"id": "0f7211ad-7b30-402f-8317-7aebc9bbbab7",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful POST request due to missing data": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create Animal",
			"id": "fdcaefca-6ddc-42b2-8907-00e6c01b956a",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"New, and now current, animal ID is 6223930792607744": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Animal Count Increment",
			"id": "dd687de6-125e-481c-b137-2f5ea1972d45",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "280",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 4,
					"fail": 0
				},
				"Found 19 animals(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each animal item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Contains most recently created animal ID": {
					"pass": 1,
					"fail": 0
				},
				"Contains previously existing animal ID(s)": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get an Animal ERROR 1",
			"id": "97d5359b-c09d-43ae-9c01-203353e6cb7a",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing user credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get an Animal ERROR 2",
			"id": "cde78531-0a90-407c-898d-0f15374c8385",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get an Animal ERROR 3",
			"id": "c5f3a7ff-9641-43bf-9bb0-88044c5af5c7",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get an Animal",
			"id": "a69f5cd1-f2af-4bd6-87ac-b0d068d1b754",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Correct animal ID: 6223930792607744": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update Animal ERROR 1",
			"id": "8315e56a-ce02-413f-8f14-c3dae9c4e850",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: Unsuccessful PUT, missing user credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update Animal ERROR 2",
			"id": "a91f694d-4897-4dd8-ae9a-5ad60d2554ae",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: Unsuccessful PUT, invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update Animal ERROR 3",
			"id": "307c66cc-361e-4eb8-992d-e3b8cf5f6260",
			"url": "https://kraftme-223903.appspot.com/animals/5630121163620352",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: Unsuccessful PUT, this animal is being kept in another user's enclosure": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update Animal ERROR 4",
			"id": "8c09d54a-7def-498c-bc72-0a0fdec0ff0b",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: Unsuccessful PUT, server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update Animal ERROR 5",
			"id": "bd55aa7a-feaf-4353-a2b0-9db7d8b223d4",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"testPassFailCounts": {
				"Status 409 Conflict: Unsuccessful PUT request due to name conflict": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update Animal ERROR 6",
			"id": "ada1d0f1-351a-41ca-9f98-4f16a6d182f7",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful PUT request due to missing data": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update Animal ERROR 7",
			"id": "f04ba4a4-d4bb-411a-91c6-50d5e1d2ee19",
			"url": "https://kraftme-223903.appspot.com/animals/123412341234123t",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful PUT request due to invalid animal ID": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update Animal ERROR 8",
			"id": "62903a22-704a-4b1c-b559-8d757a3e32e3",
			"url": "https://kraftme-223903.appspot.com/animals/1234123412341234",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"Status 404 Not Found: Unsuccessful PUT, animal ID not found": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update Animal",
			"id": "db22bd6f-6fc3-4208-a0bf-40ab055ea08a",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 303,
				"name": "See Other",
				"detail": {
					"name": "See Other",
					"detail": "The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), it should be assumed that the server has received the data and the redirect should be issued with a separate GET message."
				}
			},
			"testPassFailCounts": {
				"Status 303 See Other: go to Location returned to view updated animal record": {
					"pass": 1,
					"fail": 0
				},
				"Location found: https://kraftme-223903.appspot.com/animals/6223930792607744": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Updated Animal Contents w/ Location",
			"id": "6d00e7f0-038d-4f39-a98c-f20baea37fc4",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Correct animal content": {
					"pass": 1,
					"fail": 0
				},
				"Correct animal ID": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get All Enclosures ERROR 1",
			"id": "8630afd1-ea8b-414c-be33-2e65e2085c4a",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get All Enclosures ERROR 2",
			"id": "7b4d3d81-bf42-43dc-b362-58d3e1baa339",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get All Enclosures ERROR 3",
			"id": "dd7df5ea-6221-4652-9741-c30c6254de42",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get All Enclosures 1",
			"id": "73980ca8-e163-411e-9b7a-9c9115c4aedf",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {}
		},
		{
			"name": "Get All Enclosures 2",
			"id": "136533ed-2f01-4835-a9c9-e0a3ae1f6781",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "260",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 3,
					"fail": 0
				},
				"Content-Type returned is application/json; charset=utf-8": {
					"pass": 3,
					"fail": 0
				},
				"Found 12 enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 2 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Current enclosure ID is 5648434904170496": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get User's Enclosures ERROR 1",
			"id": "5a9c4c78-c0d2-4ac0-8e40-74420f60fe0d",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get User's Enclosures ERROR 2",
			"id": "0a9687b8-5a95-4329-8520-f49f2986611d",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get User's Enclosures ERROR 3",
			"id": "793394da-3c57-499a-9291-ece03bb0f295",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: provided credentials do not have access to userID's enclosures": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get User's Enclosures ERROR 4",
			"id": "56212bf1-bf8c-416a-8698-bedc785e713e",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get User's Enclosures 1",
			"id": "2b35b8e0-2407-4588-bfa6-10d244824e08",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {}
		},
		{
			"name": "Get User's Enclosures 2",
			"id": "f822b94a-2344-49e0-a402-a677b5823223",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type returned is application/json; charset=utf-8": {
					"pass": 1,
					"fail": 0
				},
				"Found 0 enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 0 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure has a self link": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create User Enclosure ERROR 1",
			"id": "9039dd29-5d79-48ef-aec6-8c87c48ff9ad",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: unsuccessful POST request, missing user credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create User Enclosure ERROR 2",
			"id": "68969163-9e14-4d68-9ef3-fdc4de35f771",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: unsuccessful POST request, invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create User Enclosure ERROR 3",
			"id": "cca97de7-0137-42de-a88d-54dd69bd308e",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create User Enclosure ERROR 4",
			"id": "6f9e7734-3672-4008-8e44-e691b062bd52",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"testPassFailCounts": {
				"Status 409 Conflict: enclosure number already exists": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create User Enclosure ERROR 5",
			"id": "35dc29a7-c871-4893-b476-39c77f65181b",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: missing data": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create User Enclosure",
			"id": "692fef86-0641-46cb-908d-3b05135f1c11",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"New, and now current, user enclosure ID is 5765606242516992": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Enclosure Count Increment Global",
			"id": "338db2c9-b3c3-4686-b8a1-b3e5a4def42a",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "134",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 3,
					"fail": 0
				},
				"Found 13 enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 2 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Contains most recently created enclosure ID": {
					"pass": 1,
					"fail": 0
				},
				"Contains previously existing enclosure ID(s)": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Enclosure Count Increment User",
			"id": "435ef932-19f6-4447-bf40-9fa4166ca07a",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Found 1 user's enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 0 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Contains most recently created enclosure ID": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get an Enclosure ERROR 1",
			"id": "94ccd8c4-16dc-4744-acb0-77583e68580e",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing user credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get an Enclosure ERROR 2",
			"id": "b0dff91d-e380-412e-8032-5ab4ff62c4d1",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get an Enclosure ERROR 3",
			"id": "ddf08cdd-f68b-4491-8982-64d9f68071dc",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only users application.json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get an Enclosure",
			"id": "d88352f5-830b-4ef6-94b8-e15b7a62e8a8",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Content-Type returned is application/json; charset=utf-8": {
					"pass": 1,
					"fail": 0
				},
				"Correct enclosure ID: 5765606242516992": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update all Enclosures ERROR",
			"id": "71cda3ec-3bac-4a5d-808c-935d98fb48bc",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed",
				"detail": {
					"name": "Method Not Allowed",
					"detail": "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
				}
			},
			"testPassFailCounts": {
				"Status 405 Method Not Allowed": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update all User's Enclosures ERROR",
			"id": "bb51fe32-a100-4d77-8ac6-d3d4820b0299",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed",
				"detail": {
					"name": "Method Not Allowed",
					"detail": "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
				}
			},
			"testPassFailCounts": {
				"Status 405 Method Not Allowed": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update User's Enclosure ERROR 1",
			"id": "838f3aa9-c028-46fc-b327-ab35b72f69a9",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"testPassFailCounts": {
				"Status 409 Conflict: unsuccessful PUT, number conflict": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update User's Enclosure ERROR 2",
			"id": "7654a46e-e6ec-43c2-a04e-ad3ed52170cf",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful PUT, missing data": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update User's Enclosure ERROR 3",
			"id": "c1e3a301-6f4d-435c-8158-2b099dfc69b1",
			"url": "https://kraftme-223903.appspot.com/enclosures/123412341234123t",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: unsuccessful PUT, invalid enclosure ID": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update User's Enclosure ERROR 4",
			"id": "c7832991-9ed2-4a40-bbf9-fce49387434e",
			"url": "https://kraftme-223903.appspot.com/enclosures/1234123412341234",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"Status 404 Not Found: Unsuccessful PUT, enclosure ID not found": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update User's Enclosure ERROR 5",
			"id": "d9a7b164-2df3-4e78-bdff-e1d6113c3426",
			"url": "https://kraftme-223903.appspot.com/enclosures/{{enclsoureID}}",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update User's Enclosure ERROR 6",
			"id": "98eb60e4-ea08-4643-866b-31294d723d25",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user does not keep this enclosure": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update User's Enclosure ERROR 7",
			"id": "7daac52f-a677-4531-842b-c7ddc67d5d00",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update User's Enclosure ERROR 8",
			"id": "e28d8edb-a88e-4d54-b137-2a08c8206432",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update User's Enclosure",
			"id": "8f8b0a66-0077-4bb6-9abc-82a1cd1cf175",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 303,
				"name": "See Other",
				"detail": {
					"name": "See Other",
					"detail": "The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), it should be assumed that the server has received the data and the redirect should be issued with a separate GET message."
				}
			},
			"testPassFailCounts": {
				"Status 303 See Other: successful POST request, Location provided": {
					"pass": 1,
					"fail": 0
				},
				"Location found: https://kraftme-223903.appspot.com/enclosures/5765606242516992": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Updated Enclosure Contents w/ Location",
			"id": "0e7a8c5e-cd2a-435c-b016-553ea2da366a",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Correct enclosure content": {
					"pass": 1,
					"fail": 0
				},
				"Correct enclosure ID": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Put Animal in Enclosure 1",
			"id": "00000353-fad4-4e73-b6c3-cce628ba1d4c",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 303,
				"name": "See Other",
				"detail": {
					"name": "See Other",
					"detail": "The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), it should be assumed that the server has received the data and the redirect should be issued with a separate GET message."
				}
			},
			"testPassFailCounts": {
				"Status 303 See Other: go to Location to check updated object": {
					"pass": 1,
					"fail": 0
				},
				"Location found: https://kraftme-223903.appspot.com/animals/6223930792607744": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Assigned Animal 1",
			"id": "30fcdff2-4421-4ca3-b824-94dba65c401a",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status 200 OK": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete All Enclosures ERROR",
			"id": "57e6a43f-5061-4526-af32-9815cb72353e",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed",
				"detail": {
					"name": "Method Not Allowed",
					"detail": "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
				}
			},
			"testPassFailCounts": {
				"Status 405: request method not allowed": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete User Enclosure ERROR 1",
			"id": "da62e60d-6260-4949-8e1d-955fa00cf644",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete User Enclosure ERROR 2",
			"id": "c1f6b4c3-11c6-45ca-a99b-cd9b0c1e41d3",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user does not keep this enclosure": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete User Enclosure ERROR 3",
			"id": "daf48e1e-e3f7-4f88-8f08-c896183d5bb1",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete User Enclosure",
			"id": "173e2958-dc79-4923-963a-d7359bf1331c",
			"url": "https://kraftme-223903.appspot.com/enclosures/5765606242516992",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"Status 204 No Content": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Deleted Enclosure Global",
			"id": "0a269b5f-a79d-4b8a-ae69-ae7f80f4512d",
			"url": "https://kraftme-223903.appspot.com/enclosures",
			"time": "231",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 3,
					"fail": 0
				},
				"Found 12 enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 2 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Does not contain most recently deleted enclosure ID": {
					"pass": 1,
					"fail": 0
				},
				"Contains previously existing enclosure ID(s)": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Deleted Enclosure User",
			"id": "d3e965b4-0bc9-4062-b821-edac950efad3",
			"url": "https://kraftme-223903.appspot.com/users/5477dd0c-38a6-4388-a294-dda67b048062@osu-zoo.com/enclosures",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"Found 0 user's enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 0 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Does not contain most recently deleted enclosure ID": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Animal is No Longer Assigned to Enclosure",
			"id": "6efc3ed9-6e4c-46e4-be83-3f2e5079bbde",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Animal ID's enclosure is now set to null": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete All Animals ERROR",
			"id": "03e0c194-e4ba-49b7-827f-bdf63a7232f4",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed",
				"detail": {
					"name": "Method Not Allowed",
					"detail": "A request was made of a resource using a request method not supported by that resource; for example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource."
				}
			},
			"testPassFailCounts": {
				"Status 405: request method not allowed": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete Animal ERROR 1",
			"id": "a87195e5-26a0-4b98-83b1-275ff02bf0d4",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete Animal ERROR 2",
			"id": "a5f328f9-d261-4428-aa88-f0f0ae8318f3",
			"url": "https://kraftme-223903.appspot.com/animals/5630121163620352",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user does not keep this animal's enclosure": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete Animal ERROR 3",
			"id": "0f2f0e04-f2e3-4b38-a203-1a909a7d2547",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete Animal",
			"id": "a8259cc4-dd43-493f-84f3-46c9a8295205",
			"url": "https://kraftme-223903.appspot.com/animals/6223930792607744",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"Status 204 No Content": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Deleted Animal",
			"id": "9d3ec78b-da42-4ccf-97ce-d56ea3dc59a4",
			"url": "https://kraftme-223903.appspot.com/animals",
			"time": "218",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 4,
					"fail": 0
				},
				"Found 18 animals(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each animal item has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Does not contain most recently deleted animal ID": {
					"pass": 1,
					"fail": 0
				},
				"Contains previously existing animal ID(s)": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete User ERROR 1",
			"id": "52ba0c0d-e0f4-41ca-9772-956c47d899b6",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete User ERROR 2",
			"id": "90700779-9c10-4cb9-a2af-46729e60f7cf",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: a user cannot delete a user account": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete User ERROR 3",
			"id": "cfb43c82-0162-4562-be9c-4c89d0a34342",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete User 1",
			"id": "20fed6c6-a8c0-42cd-a489-2e8b9993fcd8",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cba7582ce4607ee7d7b",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"Status 204 No Content": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Deleted User 1",
			"id": "6bab3fcf-a409-4aa1-86f5-08f32c5483be",
			"url": "https://kraftme-223903.appspot.com/users",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Found 38 users(s)": {
					"pass": 1,
					"fail": 0
				},
				"Does not contain most recently deleted user ID": {
					"pass": 1,
					"fail": 0
				},
				"Still contains other previously existing user ID(s)": {
					"pass": 1,
					"fail": 0
				},
				"Current user ID is auth0|5c061cbacd06c82e39be6589": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "User Authorization 2",
			"id": "b2a0ccd3-5864-4a7e-ada6-c70b77da2343",
			"url": "https://kraftme-223903.appspot.com/login",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status 201 Created: Successful POST request": {
					"pass": 1,
					"fail": 0
				},
				"User ID Token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wUXhRVU5HUXpVM09ESTRNVGRFUWpaQ1JEQTJNMFZHUWpRNVFrTTNOME5HTXpNd05qTkVSZyJ9.eyJuaWNrbmFtZSI6IjMyYWUxMDdhLTY3MTctNDNlMS04NWI0LTUxYWFlN2E4N2M4MSIsIm5hbWUiOiIzMmFlMTA3YS02NzE3LTQzZTEtODViNC01MWFhZTdhODdjODFAb3N1LXpvby5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjdjYWM2ODBmYmI4NGJjNGE3NDJjNDNiOTc0MGRhYjk_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkYzMi5wbmciLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0wNFQwNjoyMTowNS4wNTZaIiwiZW1haWwiOiIzMmFlMTA3YS02NzE3LTQzZTEtODViNC01MWFhZTdhODdjODFAb3N1LXpvby5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9rcmFmdG1lLmF1dGgwLmNvbS8iLCJzdWIiOiJhdXRoMHw1YzAzMDdlNDY0OWJkMzJkZTNiZGI2YTAiLCJhdWQiOiJIdzZNRmRPck5JOUtFMWNiYlZIckF3aXhHSFZuMjlDSCIsImlhdCI6MTU0MzkwNDQ2NSwiZXhwIjoxNTQzOTQwNDY1fQ.TmMr1QVfKfGGkSWHCaIGuP68xSaBerF78EJ2OvHF-xWSdFKQ02Bd0vzyyQDQp6qSRdSBQDXAi5fpD7mpXIaisMZiRacp8UdHBq5RXtUHpoXGe5ruEOWKWM-eXRPG_lJtR1h001S8vJg_qi79_UcN3BysEkcg3PfnV2C9ld4qTFQZc2uuH5sSWR_ZDYFdvxMjrC7Km-tvA5JWzYmGuqgHfcM4DEp-zXt_UwQw62pZYtkgAZ9JQH14M8P24WfbZzmf0V8InaO5Dm6Az2gFmjPHuqQKNAja33lfic71JJE64qr0YA4WsVL_BleJgM2l2nGDxHNSTYdxFSiTBu1DRd-lOg": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get User's Enclosures 3",
			"id": "a060cf30-b5a3-4a6a-9d6e-15311f0d1498",
			"url": "https://kraftme-223903.appspot.com/users/32ae107a-6717-43e1-85b4-51aae7a87c81@osu-zoo.com/enclosures",
			"time": "129",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status: 200 OK": {
					"pass": 2,
					"fail": 0
				},
				"Content-Type returned is application/json; charset=utf-8": {
					"pass": 2,
					"fail": 0
				},
				"Found 6 enclosure(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 1 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each enclosure has a self link": {
					"pass": 1,
					"fail": 0
				},
				"Current user enclosure ID is 5662005255995392": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Put Animal in Enclosure ERROR 1",
			"id": "e6fcb220-d757-400a-9ab4-6b3879b0b0ed",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/1234123412341234",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"Status 404 Not Found: Unsuccessful PUT, animal ID not found": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Put Animal in Enclosure ERROR 2",
			"id": "d68f09cd-59f9-4f6b-9038-7145a50928fc",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/123412341234123",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful PUT, invalid animal ID": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Put Animal in Enclosure ERROR 3",
			"id": "508c4337-4cc5-4022-a223-471669ac649f",
			"url": "https://kraftme-223903.appspot.com/enclosures/12341234123/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful PUT, invalid enclosure ID": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Put Animal in Enclosure ERROR 4",
			"id": "b8abf29a-1689-4b5c-9fda-c31356841c50",
			"url": "https://kraftme-223903.appspot.com/enclosures/1234123412341234/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"Status 404 Not Found: Unsuccessful PUT, enclosure ID not found": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Put Animal in Enclosure ERROR 5",
			"id": "e9110eef-0476-45a3-a69e-13396d24ba2d",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Put Animal in Enclosure ERROR 6",
			"id": "770d3050-7f72-4eac-aa46-ba3f5aeddc50",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Put Animal in Enclosure ERROR 7",
			"id": "c12bea75-9d67-47dc-aa97-17d4942e27a5",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: missing credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Put Animal in Enclosure ERROR 8",
			"id": "b3fea445-5e1e-4697-9934-455490eb454c",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user credentials do not own this enclosure": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Put Animal in Enclosure ERROR 9",
			"id": "021c258b-9110-4e49-9112-7311f402c9e7",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5645015573331968",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: animal currently lives in another keeper's enclosure": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Put Animal in Enclosure 2",
			"id": "39459681-28a1-409a-962e-33c27e821cd0",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 303,
				"name": "See Other",
				"detail": {
					"name": "See Other",
					"detail": "The response to the request can be found under another URI using a GET method. When received in response to a POST (or PUT/DELETE), it should be assumed that the server has received the data and the redirect should be issued with a separate GET message."
				}
			},
			"testPassFailCounts": {
				"Status 303 See Other: got to Location to check udpated object": {
					"pass": 1,
					"fail": 0
				},
				"Location found: https://kraftme-223903.appspot.com/animals/5185395654393856": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Assigned Animal 2",
			"id": "c420829f-2823-4cb4-8d50-0e4e674940e2",
			"url": "https://kraftme-223903.appspot.com/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status 200 OK": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get Enclosure Animals 1",
			"id": "e3960402-fbe2-4e8a-b25d-2dc915dd7cab",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {}
		},
		{
			"name": "Get Enclosure Animals 2",
			"id": "40fda94a-767f-46c8-9d95-14a49c442c7e",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals",
			"time": "367",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 2,
					"fail": 0
				},
				"Found 7 animals(s)": {
					"pass": 1,
					"fail": 0
				},
				"Found 1 pagination link(s)": {
					"pass": 1,
					"fail": 0
				},
				"Correct number of pagination links": {
					"pass": 1,
					"fail": 0
				},
				"Each animal has a self link": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 1",
			"id": "525a515b-8428-4204-ac5c-44dc87b41296",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: Unsuccessful DELETE, missing credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 2",
			"id": "0270a795-9c78-4e45-a5e3-6c14e5d3c916",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: Unsuccessful DELETE, invalid credentials": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 3",
			"id": "f7e91be8-edfd-4d40-928d-f8bfb98475d0",
			"url": "https://kraftme-223903.appspot.com/enclosures/1234123412341234/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"Status 404 Nnot Found: Unsuccessful DELETE, enclosure ID not found": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 4",
			"id": "45b2020f-ed59-448a-ad2c-4b7ae0d78cb9",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/1234123412341234",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"Status 404 Not Found: Unsuccessful DELETE, animal ID not found": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 5",
			"id": "f40e5735-9d52-450a-8cf7-582d83cda274",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5735393697726464",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 403,
				"name": "Forbidden",
				"detail": {
					"name": "Forbidden",
					"detail": "The request was a legal request, but the server is refusing to respond to it. Unlike a 401 Unauthorized response, authenticating will make no difference."
				}
			},
			"testPassFailCounts": {
				"Status 403 Forbidden: Unsuccessful DELETE, animal is being kept in another enclosure": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 6",
			"id": "0b7b0ef2-458a-4e27-91dd-6722d9880592",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 406,
				"name": "Not Acceptable",
				"detail": {
					"name": "Not Acceptable",
					"detail": "The requested resource is only capable of generating content not acceptable according to the Accept headers sent in the request."
				}
			},
			"testPassFailCounts": {
				"Status 406 Not Accepted: server only uses application/json": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Remove Animal from Enclosure ERROR 7",
			"id": "4805843e-2ddf-434a-afba-315fedd332b9",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 401,
				"name": "Unauthorized",
				"detail": {
					"name": "Unauthorized",
					"detail": "Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the requested resource."
				}
			},
			"testPassFailCounts": {
				"Status 401 Unauthorized: user does not own this enclosure": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Remove Animal from Enclosure",
			"id": "0da7d764-b73f-4ee0-bfc0-2882bd02925c",
			"url": "https://kraftme-223903.appspot.com/enclosures/5667370274127872/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"Status 204 No Content": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Removed Animal",
			"id": "c32fb427-467b-4e4b-9f0d-0b5d840bfa97",
			"url": "https://kraftme-223903.appspot.com/animals/5185395654393856",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Enclosure ID not found in Animal ID": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete User 2",
			"id": "5dc81209-deb8-44fe-950a-12c28c2b3bc9",
			"url": "https://kraftme-223903.appspot.com/users/auth0|5c061cbacd06c82e39be6589",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"Status 204 No Content": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Confirm Deleted User 2",
			"id": "858efd8c-8735-455f-910a-c2dc61e0cb37",
			"url": "https://kraftme-223903.appspot.com/users",
			"time": "2018-12-04T06:20:39.430Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Found 37 users(s)": {
					"pass": 1,
					"fail": 0
				},
				"Does not contain most recently deleted user ID": {
					"pass": 1,
					"fail": 0
				},
				"Still contains other previously existing user ID(s)": {
					"pass": 1,
					"fail": 0
				},
				"Current user ID is auth0|5c0307e4649bd32de3bdb6a0": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}